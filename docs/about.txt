EpiCMDB
Bases de données

Utilisation des tables existantes (BRAND, CONTACTS, HISTORIC, LOCALISATION, MODEl, STOCK) sans modification de celles-ci.

Front End

Développement de l'outil effectué en ASP.NET WebForms, impliquant l'utilisation de HTML, CSS et jQUERY. Après scan ou encodage de l'Epi ID, l'interface permet d'afficher le parcours du matériel, son historique.

Le préfixe « EPI » n'est pas nécessaire pour le bon fonctionnement de l'interface.


Après encodage de l'Epi Id, l'interface affiche l'état actuel de l'objet ainsi que son historique. Si l'objet est actuellement en transit, il est possible d'afficher le ticket lié au déplacement de ce matériel en appuyant simplement sur le numéro de celui-ci. (cf. DisplayTicket).
Back End
Utilisation des langages C#, SQL.
Méthode permettant de rechercher l'historique et les informations d'un produit par son Epi Id. 




--------------------------------------------------------------------------------------------------------------------------------



Display Ticket
Bases de données

Utilisation des tables TICKET, CONTACTS et TICKETS_COMMENT sans modifications de celles-ci.

Front End

Développement de l'outil effectué en ASP.NET WebForms, impliquant l'utilisation de HTML, CSS et jQUERY. L'interface permet d'afficher les détails du ticket lié au déplacement de matériel. L'interface affiche également les commentaires liés à ce ticket.

Back End

Utilisation des langages C# et SQL.
Méthode permettant de récupérer les détails du ticket, de l'appelant, de l'agent et les commentaires liés à ce ticket.




--------------------------------------------------------------------------------------------------------------------------------




EpiACCESS Close
Bases de données
Utilisation des tables ACCESS_REQUESTS, CONTACTS, TICKETS sans modifications de celles-ci.
L'interface utilise également le WebService ChgPwdWindows impliquant une modification du mot de passe de l'utilisateur ciblé.

Front End
Développement de l'outil effectué en ASP.NET WebForms, impliquant l'utilisation de HTML, CSS et jQUERY. L'interface permet d'afficher les demandes d'accès actuellement en OP_READY et donc en attente de fermeture par l'opérateur dans le but de les fermer automatiquement en générant un mot de passe aléatoire et prévenant le responsable de l'utilisateur concerné.

L'affichage des résultat dépend d'une recherche, encodée par l'utilisateur.
Quelques mots clés sont prévus pour l'affichage des résultats (veuillez noter que ces mots clés sont sensibles à la casse) : 
- Si l'utilisateur recherche "ALL", l'interface affichera toutes les demandes d'accès qui ne sont pas fermées.
- .. ? 

Back End
Utilisation des langages C# et SQL
Méthode permettant de charger les requêtes OP_READY.
Méthode permettant de générer un mot de passe aléatoire mais prononçable, via la classe PasswordGenerator, d'envoyer un email via la classe MailSender et de fermer la demande d'accès au niveau de la base de données. 


--------------------------------------------------------------------------------------------------------------------------------


Gestion EpiACCESS


Front End 

L'affichage des résultat dépend d'une recherche, encodée par l'utilisateur.
Quelques mots clés sont prévus pour l'affichage des résultats (veuillez noter que ces mots clés sont sensibles à la casse) : 
- Si l'utilisateur recherche "ALL", l'interface affichera toutes les demandes d'accès qui ne sont pas fermées.
- .. ? 
