//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccessApp.EpiService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.epicura.be/", ConfigurationName="EpiService.MyServicesSoap")]
    public interface MyServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvZimbraIDDL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvZimbraIDDL(string aDistributionListName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvZimbraIDDL", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvZimbraIDDLAsync(string aDistributionListName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunSCCMAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RunSCCMAction(string sComputerName, string sTriggerAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunSCCMAction", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunSCCMActionAsync(string sComputerName, string sTriggerAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunSelectSQLCmd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RunSelectSQLCmd(string myCmd, string myDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunSelectSQLCmd", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RunSelectSQLCmdAsync(string myCmd, string myDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunCmdOnAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RunCmdOnAS400(string myCmd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunCmdOnAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunCmdOnAS400Async(string myCmd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunNoSelectSQLCmd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RunNoSelectSQLCmd(string myCmd, string myDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RunNoSelectSQLCmd", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunNoSelectSQLCmdAsync(string myCmd, string myDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SearchDC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SearchDC(string domainName, bool swsAll, bool swsActif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SearchDC", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SearchDCAsync(string domainName, bool swsAll, bool swsActif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SearchUsrID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SearchUsrID(string domainName, string myFilter, string aResultFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SearchUsrID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SearchUsrIDAsync(string domainName, string myFilter, string aResultFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetBIOSGUIDToEpiDesk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SetBIOSGUIDToEpiDesk(string sEpiID, string sBIOSGUID, string ESign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetBIOSGUIDToEpiDesk", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetBIOSGUIDToEpiDeskAsync(string sEpiID, string sBIOSGUID, string ESign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetMACAddressToEpiDesk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SetMACAddressToEpiDesk(string sEpiID, string AllMACAddress, string ESign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetMACAddressToEpiDesk", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetMACAddressToEpiDeskAsync(string sEpiID, string AllMACAddress, string ESign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetTSLogsInstallWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SetTSLogsInstallWindows(string sBIOSGUID, string sDomainUser, string sUserName, string sTSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetTSLogsInstallWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetTSLogsInstallWindowsAsync(string sBIOSGUID, string sDomainUser, string sUserName, string sTSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetSCCMStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SetSCCMStatus(string sDomainName, string sObjectName, string sAssignmentName, string sStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetSCCMStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetSCCMStatusAsync(string sDomainName, string sObjectName, string sAssignmentName, string sStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetVersionPackages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SetVersionPackages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SetVersionPackages", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetVersionPackagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SndAndRcvSocket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.SndAndRcvSocketResponse SndAndRcvSocket(AccessApp.EpiService.SndAndRcvSocketRequest request);
        
        // CODEGEN : Génération du contrat de message dans la mesure où l'opération compte plusieurs valeurs de retour.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SndAndRcvSocket", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.SndAndRcvSocketResponse> SndAndRcvSocketAsync(AccessApp.EpiService.SndAndRcvSocketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SndDtaqAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SndDtaqAS400(string dtaqName, string dtaqLib, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SndDtaqAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SndDtaqAS400Async(string dtaqName, string dtaqLib, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/StatusDeploymentByMachineName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_StatusDeployment StatusDeploymentByMachineName(string sMachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/StatusDeploymentByMachineName", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_StatusDeployment> StatusDeploymentByMachineNameAsync(string sMachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SynDC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction SynDC(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/SynDC", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SynDCAsync(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/TriggerCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rTriggerAction TriggerCodes(string sCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/TriggerCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rTriggerAction> TriggerCodesAsync(string sCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdPropLdapOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdPropLdapOpenDJ(string sUID, string sPropName, string sPropValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdPropLdapOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdPropLdapOpenDJAsync(string sUID, string sPropName, string sPropValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdPropLdapWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdPropLdapWin(string domainName, string objectName, string propertyName, string newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdPropLdapWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdPropLdapWinAsync(string domainName, string objectName, string propertyName, string newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrAS400(string userName, string displayName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrAS400Async(string userName, string displayName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrLotus(string OldUserName, string NewUserName, string sn, string givenName, string mail, string password, string sGrp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrLotusAsync(string OldUserName, string NewUserName, string sn, string givenName, string mail, string password, string sGrp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrOpenDJ(string sOldUserName, string sEpicuraDomain, string sEpicuraDomainUser, string sNewUserName, string sGivenName, string sSn, string sINAMI, string sMail, string sMobile, string sChannelAccess, bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrOpenDJAsync(string sOldUserName, string sEpicuraDomain, string sEpicuraDomainUser, string sNewUserName, string sGivenName, string sSn, string sINAMI, string sMail, string sMobile, string sChannelAccess, bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrOpenDJ4Phone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrOpenDJ4Phone(
                    string sOldUserName, 
                    string sEpicuraDomain, 
                    string sEpicuraDomainUser, 
                    string sNewUserName, 
                    string sGivenName, 
                    string sSn, 
                    string sINAMI, 
                    string sMail, 
                    string sMobile, 
                    string sChannelAccess, 
                    string sO, 
                    string sLabeledURI, 
                    string sFacsimileTelephoneNumber, 
                    string sHomePhone, 
                    string sL, 
                    string sDepartmentNumber, 
                    string SEmployeeType, 
                    string sDestinationIndicator, 
                    string sTelephoneNumber, 
                    bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrOpenDJ4Phone", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrOpenDJ4PhoneAsync(
                    string sOldUserName, 
                    string sEpicuraDomain, 
                    string sEpicuraDomainUser, 
                    string sNewUserName, 
                    string sGivenName, 
                    string sSn, 
                    string sINAMI, 
                    string sMail, 
                    string sMobile, 
                    string sChannelAccess, 
                    string sO, 
                    string sLabeledURI, 
                    string sFacsimileTelephoneNumber, 
                    string sHomePhone, 
                    string sL, 
                    string sDepartmentNumber, 
                    string SEmployeeType, 
                    string sDestinationIndicator, 
                    string sTelephoneNumber, 
                    bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrRXWin(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil, bool actif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrRXWinAsync(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil, bool actif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrTelemis(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrTelemisAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrWin(
                    string domainName, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string sMemberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrWinAsync(
                    string domainName, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string sMemberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction UpdUsrZimbra(string aOldAccount, string aAccount, string aPassword, string aFirstName, string aLastName, string aMailAlias, string aMemberOf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/UpdUsrZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrZimbraAsync(string aOldAccount, string aAccount, string aPassword, string aFirstName, string aLastName, string aMailAlias, string aMemberOf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/WakeOnLan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rWakeOnLan WakeOnLan(string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/WakeOnLan", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rWakeOnLan> WakeOnLanAsync(string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/Whoami", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rWhoami Whoami(string sIP, string sComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/Whoami", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rWhoami> WhoamiAsync(string sIP, string sComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetApplicationByAssignmentID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetAssignment GetApplicationByAssignmentID(string sAssignmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetApplicationByAssignmentID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetAssignment> GetApplicationByAssignmentIDAsync(string sAssignmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByApplicationName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollections GetCollectionByApplicationName(string ApplicationName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByApplicationName", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetCollectionByApplicationNameAsync(string ApplicationName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByCollectionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollection GetCollectionByCollectionID(string sCollectionID, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByCollectionID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByCollectionIDAsync(string sCollectionID, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByCollectionName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollection GetCollectionByCollectionName(string sCollectionName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByCollectionName", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByCollectionNameAsync(string sCollectionName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByGroupName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollection GetCollectionByGroupName(string domainName, string GroupName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionByGroupName", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByGroupNameAsync(string domainName, string GroupName, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionBySiteID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollection GetCollectionBySiteID(string sSiteID, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionBySiteID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionBySiteIDAsync(string sSiteID, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionsByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollections GetCollectionsByType(string typeCollection, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetCollectionsByType", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetCollectionsByTypeAsync(string typeCollection, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetGroupsGroupIsIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GetGroupsGroupIsIn(string aDomainName, string aGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetGroupsGroupIsIn", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetGroupsGroupIsInAsync(string aDomainName, string aGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCM(string sDomain, string sObject, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMAsync(string sDomain, string sObject, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByBIOSGUID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCMByBIOSGUID(string sSMBIOSGUID, string sIP, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByBIOSGUID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMByBIOSGUIDAsync(string sSMBIOSGUID, string sIP, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByMACAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCMByMACAddress(string sMACAddress, string sIP, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByMACAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMByMACAddressAsync(string sMACAddress, string sIP, bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByRessourceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GetObjectSCCMByRessourceID(string sRessourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetObjectSCCMByRessourceID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetObjectSCCMByRessourceIDAsync(string sRessourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetPrinters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rGetPrinters GetPrinters(string sComputerName, string sDomainNameUser, string sUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetPrinters", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rGetPrinters> GetPrintersAsync(string sComputerName, string sDomainNameUser, string sUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetRegistry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rGetRegistry GetRegistry(string sComputerName, string shKey, string sSubKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetRegistry", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rGetRegistry> GetRegistryAsync(string sComputerName, string shKey, string sSubKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetTSLogsInstallWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rGetTSLogsInstallWindows GetTSLogsInstallWindows(string BIOSGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetTSLogsInstallWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rGetTSLogsInstallWindows> GetTSLogsInstallWindowsAsync(string BIOSGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetRulesByCollectionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollection GetRulesByCollectionID(string sCollectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetRulesByCollectionID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetRulesByCollectionIDAsync(string sCollectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetSCCMStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rSCCMStatus GetSCCMStatus(string sDomainName, string sObjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetSCCMStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rSCCMStatus> GetSCCMStatusAsync(string sDomainName, string sObjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetSCCMStatusByRessourceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rSCCMStatus GetSCCMStatusByRessourceID(string sRessourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetSCCMStatusByRessourceID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rSCCMStatus> GetSCCMStatusByRessourceIDAsync(string sRessourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetVersionPackages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GetVersionPackages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetVersionPackages", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetVersionPackagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GstUsrEpiCARE(
                    string userName, 
                    string initials, 
                    string nom, 
                    string prenom, 
                    string email, 
                    string IDSecMed, 
                    string SexSecMed, 
                    string TelSecMed, 
                    string CmmSecMed, 
                    string DtNSecMed, 
                    string DtDSecMed, 
                    string DtCSecMed, 
                    string DtESecMed, 
                    string DtSSecMed, 
                    string StsSecMed, 
                    string IDPrestAS400, 
                    string SPSecMed, 
                    string SrvSecMed, 
                    string memberOf, 
                    string updBy, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrEpiCAREAsync(
                    string userName, 
                    string initials, 
                    string nom, 
                    string prenom, 
                    string email, 
                    string IDSecMed, 
                    string SexSecMed, 
                    string TelSecMed, 
                    string CmmSecMed, 
                    string DtNSecMed, 
                    string DtDSecMed, 
                    string DtCSecMed, 
                    string DtESecMed, 
                    string DtSSecMed, 
                    string StsSecMed, 
                    string IDPrestAS400, 
                    string SPSecMed, 
                    string SrvSecMed, 
                    string memberOf, 
                    string updBy, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrPolymedis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GstUsrPolymedis(string type, string userName, string nom, string prenom, string sexe, string dtN, string IDPrestAS400, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrPolymedis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrPolymedisAsync(string type, string userName, string nom, string prenom, string sexe, string dtN, string IDPrestAS400, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrXperthis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction GstUsrXperthis(string domainName, string type, string userName, string dtN, string IDPrestAS400, string password, string sServer, string sPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GstUsrXperthis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrXperthisAsync(string domainName, string type, string userName, string dtN, string IDPrestAS400, string password, string sServer, string sPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HldUsrEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction HldUsrEpiCARE(string userName, string DtESecMed, string updBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HldUsrEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> HldUsrEpiCAREAsync(string userName, string DtESecMed, string updBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HldUsrRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction HldUsrRXWin(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/HldUsrRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> HldUsrRXWinAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInCollectionName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction IsInCollectionName(string sObjectName, string sCollectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInCollectionName", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInCollectionNameAsync(string sObjectName, string sCollectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction IsInGroup(string domainNameUser, string userName, string domainNameGroup, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInGroupAsync(string domainNameUser, string userName, string domainNameGroup, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInGroupOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction IsInGroupOpenDJ(string sUsrName, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInGroupOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInGroupOpenDJAsync(string sUsrName, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction IsInSCCM(string sDomain, string sObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/IsInSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInSCCMAsync(string sDomain, string sObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ReadInAD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ReadInAD(string domainName, string myFilter, string aResultFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ReadInAD", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ReadInADAsync(string domainName, string myFilter, string aResultFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ReadInOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rReadInOpenDJ ReadInOpenDJ(string myFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ReadInOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rReadInOpenDJ> ReadInOpenDJAsync(string myFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RlsUsrRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RlsUsrRXWin(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RlsUsrRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RlsUsrRXWinAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvFldrNotes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvFldrNotes(string aSrvDomMAILING, string aUserName, string aFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvFldrNotes", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvFldrNotesAsync(string aSrvDomMAILING, string aUserName, string aFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInAllGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvInAllGroups(string domainName, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInAllGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInAllGroupsAsync(string domainName, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvInGroup(string domainName, string objectName, string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInGroupAsync(string domainName, string objectName, string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInGroupOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvInGroupOpenDJ(string sUID, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvInGroupOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInGroupOpenDJAsync(string sUID, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvLoginScript", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvLoginScript(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvLoginScript", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvLoginScriptAsync(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvOnServerAntivirus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RmvOnServerAntivirus(string domainName, string computerName, string onServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RmvOnServerAntivirus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvOnServerAntivirusAsync(string domainName, string computerName, string onServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtnInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtnInfo RtnInfo(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtnInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtnInfo> RtnInfoAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllComputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvALLComputer RtvAllComputer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllComputer", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvALLComputer> RtvAllComputerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllDLZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvAllDLZimbra RtvAllDLZimbra();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllDLZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllDLZimbra> RtvAllDLZimbraAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllMbrGrpWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvAllMbrGrpWin RtvAllMbrGrpWin(string domainName, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllMbrGrpWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllMbrGrpWin> RtvAllMbrGrpWinAsync(string domainName, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvAllUsrOpenDJ RtvAllUsrOpenDJ();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllUsrOpenDJ> RtvAllUsrOpenDJAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllUsrWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvAllUsrWindows RtvAllUsrWindows(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvAllUsrWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllUsrWindows> RtvAllUsrWindowsAsync(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvBckCollections", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvBckCollections(string domainName, string objectName, bool swsPurgeAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvBckCollections", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvBckCollectionsAsync(string domainName, string objectName, bool swsPurgeAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvBIOSGUIDFromEpiDesk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk RtvBIOSGUIDFromEpiDesk(string sEpiID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvBIOSGUIDFromEpiDesk", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk> RtvBIOSGUIDFromEpiDeskAsync(string sEpiID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvComputerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvComputerInfo RtvComputerInfo(string domainName, string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvComputerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvComputerInfo> RtvComputerInfoAsync(string domainName, string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvComputerNameFromCMDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvComputerNameFromCMDB(string MACAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvComputerNameFromCMDB", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvComputerNameFromCMDBAsync(string MACAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvDLZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvDLZimbra RtvDLZimbra(string aDL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvDLZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvDLZimbra> RtvDLZimbraAsync(string aDL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvEnvRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvEnvRXWin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvEnvRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvEnvRXWinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvCMDBForBIOSGUID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk RtvCMDBForBIOSGUID(string BIOSGUID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvCMDBForBIOSGUID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk> RtvCMDBForBIOSGUIDAsync(string BIOSGUID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvGrpAS400();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvGrpAS400Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpEpiCare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvGrpEpiCare();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpEpiCare", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvGrpEpiCareAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvGrpLotus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvGrpLotusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvGrpOpenDJ RtvGrpOpenDJ(bool swsMember, string sCn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvGrpOpenDJ> RtvGrpOpenDJAsync(bool swsMember, string sCn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvGrpTelemis();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvGrpTelemisAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvGrpWin RtvGrpWin(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvGrpWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvGrpWin> RtvGrpWinAsync(string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInDns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvInDns(string DomainName, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInDns", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvInDnsAsync(string DomainName, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInfoComputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvInfoComputer RtvInfoComputer(string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInfoComputer", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvInfoComputer> RtvInfoComputerAsync(string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInfoComputerByIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvInfoComputer RtvInfoComputerByIP(string sIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvInfoComputerByIP", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvInfoComputer> RtvInfoComputerByIPAsync(string sIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMACAddressFromEpiDesk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvMACAddressFromEpiDesk RtvMACAddressFromEpiDesk(string sEpiID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMACAddressFromEpiDesk", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvMACAddressFromEpiDesk> RtvMACAddressFromEpiDeskAsync(string sEpiID, string swsAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMbrGrpWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvMbrGrpWin(string sDomainName, string sGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMbrGrpWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvMbrGrpWinAsync(string sDomainName, string sGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMBInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvMBInfo RtvMBInfo(string aUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvMBInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvMBInfo> RtvMBInfoAsync(string aUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvOpenDJProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvOpenDJProperty(string domainName, string qui, string prop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvOpenDJProperty", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvOpenDJPropertyAsync(string domainName, string qui, string prop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvOU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvOU(string domainName, string Filter, bool swsAllInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvOU", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvOUAsync(string domainName, string Filter, bool swsAllInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvPrestataireAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvPrestataireAS400(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvPrestataireAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvPrestataireAS400Async(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvPrfRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvPrfRXWin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvPrfRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvPrfRXWinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvServerAntivirus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvServerAntivirus(string domainName, string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvServerAntivirus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvServerAntivirusAsync(string domainName, string computerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvServicesEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvServicesEpiCARE();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvServicesEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvServicesEpiCAREAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvSitesEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvSitesEpiCARE();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvSitesEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvSitesEpiCAREAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rResultSelect RtvUsrAS400(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvUsrAS400Async(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrLotusInfo RtvUsrLotus(string aUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrLotusInfo> RtvUsrLotusAsync(string aUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJ(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsersOpenDJ RtvUsrOpenDJByEmail(string sMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsersOpenDJ> RtvUsrOpenDJByEmailAsync(string sMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByEpicuraDomainUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsersOpenDJ RtvUsrOpenDJByEpicuraDomainUser(string EpicuraDomainUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByEpicuraDomainUser", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsersOpenDJ> RtvUsrOpenDJByEpicuraDomainUserAsync(string EpicuraDomainUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByINAMI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJByINAMI(string INAMI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByINAMI", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJByINAMIAsync(string INAMI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByTelephoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJByTelephoneNumber(string sTelephoneNumber, string sProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrOpenDJByTelephoneNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJByTelephoneNumberAsync(string sTelephoneNumber, string sProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrRXWin RtvUsrRXWin(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrRXWin> RtvUsrRXWinAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrEpiCARE RtvUsrEpiCARE(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrEpiCARE> RtvUsrEpiCAREAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrTelemis RtvUsrTelemis(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrTelemis> RtvUsrTelemisAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWinByINAMI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrWindows RtvUsrWinByINAMI(string domainName, string INAMI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWinByINAMI", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrWindows> RtvUsrWinByINAMIAsync(string domainName, string INAMI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrWindows RtvUsrWindows(string domainName, string userName, bool AllDomains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrWindows> RtvUsrWindowsAsync(string domainName, string userName, bool AllDomains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWindonsBySid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvUsrWindonsBySid(string sSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWindonsBySid", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvUsrWindonsBySidAsync(string sSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWinStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction RtvUsrWinStatus(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrWinStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvUsrWinStatusAsync(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rRtvUsrZimbra RtvUsrZimbra(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/RtvUsrZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrZimbra> RtvUsrZimbraAsync(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddGrpAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction AddGrpAS400(string userName, string sMemberOf, bool dltBefore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddGrpAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddGrpAS400Async(string userName, string sMemberOf, bool dltBefore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInCollectionSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction AddInCollectionSCCM(string sResourceID, string sType, string sRuleName, string sSiteIDCollection, string sMailType, string sMailTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInCollectionSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInCollectionSCCMAsync(string sResourceID, string sType, string sRuleName, string sSiteIDCollection, string sMailType, string sMailTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction AddInGroup(string domainName, string allGroupName, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInGroupAsync(string domainName, string allGroupName, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInGroupOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction AddInGroupOpenDJ(string sUID, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddInGroupOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInGroupOpenDJAsync(string sUID, string sGrpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddObjectClassLdapOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction AddObjectClassLdapOpenDJ(string sObjectClass, string sOUName, string sFieldName, string sFieldValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/AddObjectClassLdapOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddObjectClassLdapOpenDJAsync(string sObjectClass, string sOUName, string sFieldName, string sFieldValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgACL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgACL(string FolderPath, string UserAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgACL", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgACLAsync(string FolderPath, string UserAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgOU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgOU(string domainName, string objectName, string newOU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgOU", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgOUAsync(string domainName, string objectName, string newOU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgComputerNameInSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgComputerNameInSCCM(string sBIOSGUID, string sNewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgComputerNameInSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgComputerNameInSCCMAsync(string sBIOSGUID, string sNewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdAs400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgPwdAs400(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdAs400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdAs400Async(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgPwdEpiCARE(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdEpiCAREAsync(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdUltrAgenda", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgPwdUltrAgenda(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdUltrAgenda", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdUltrAgendaAsync(string userName, string password1, string password2, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChgPwdWindows(string domainName, string userName, string oldPassword, string password1, string password2, bool resetPassword, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChgPwdWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdWindowsAsync(string domainName, string userName, string oldPassword, string password1, string password2, bool resetPassword, bool restreint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkEpiID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkEpiID(string sEpiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkEpiID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkEpiIDAsync(string sEpiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkInstallMSI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkInstallMSI(string sDomainName, string sComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkInstallMSI", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkInstallMSIAsync(string sDomainName, string sComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrAS400(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrAS400Async(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrEpiCARE(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrEpiCAREAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrIPortal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrIPortal(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrIPortal", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrIPortalAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrLotus(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrLotusAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrOpenDJ(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrOpenDJAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrPolymedis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrPolymedis(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrPolymedis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrPolymedisAsync(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrUltrAgenda", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrUltrAgenda(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrUltrAgenda", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrUltrAgendaAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrTelemis(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrTelemisAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrWindows(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrWindowsAsync(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkUsrZimbra(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkUsrZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrZimbraAsync(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkWinPwd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ChkWinPwd(string domainName, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ChkWinPwd", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkWinPwdAsync(string domainName, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ClnPropLdapOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ClnPropLdapOpenDJ(string sUID, string sPropName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ClnPropLdapOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ClnPropLdapOpenDJAsync(string sUID, string sPropName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ComputerIsAlive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction ComputerIsAlive(string sComputerName, string sNbEssai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/ComputerIsAlive", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ComputerIsAliveAsync(string sComputerName, string sNbEssai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CpyFldrSnd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CpyFldrSnd(string aSrvDomMAILING, string aUserName, string aFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CpyFldrSnd", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CpyFldrSndAsync(string aSrvDomMAILING, string aUserName, string aFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtBCKCollections", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtBCKCollections(string domainName, string objectName, string BackupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtBCKCollections", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtBCKCollectionsAsync(string domainName, string objectName, string BackupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrAS400(string userName, string displayName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrAS400Async(string userName, string displayName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrLotus(string userName, string sn, string givenName, string mail, string password, string sGrp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrLotusAsync(string userName, string sn, string givenName, string mail, string password, string sGrp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrOpenDJ(string domainName, string loginDomain, string userName, string firstName, string lastName, string INAMI, string mail, string mobile, string ChannelAccess, bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrOpenDJAsync(string domainName, string loginDomain, string userName, string firstName, string lastName, string INAMI, string mail, string mobile, string ChannelAccess, bool swsTestAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrRXWin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrRXWin(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrRXWin", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrRXWinAsync(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrTelemis(string userName, string displayName, string password, string Group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrTelemisAsync(string userName, string displayName, string password, string Group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrWindows(
                    string domainName, 
                    string OU, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string memberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrWindowsAsync(
                    string domainName, 
                    string OU, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string memberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction CrtUsrZimbra(string aAccount, string aPassword, string aFirstName, string aLastName, string aMemberOf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/CrtUsrZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrZimbraAsync(string aAccount, string aPassword, string aFirstName, string aLastName, string aMemberOf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DisabledOrEnabledUsrWindows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DisabledOrEnabledUsrWindows(string domainName, string userName, bool enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DisabledOrEnabledUsrWindows", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DisabledOrEnabledUsrWindowsAsync(string domainName, string userName, bool enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/Debug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction Debug(string aMsg, string aQui, string aObjet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/Debug", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DebugAsync(string aMsg, string aQui, string aObjet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInCollectionSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltInCollectionSCCM(string sObjectNameInSCCM, string sSiteIDCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInCollectionSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInCollectionSCCMAsync(string sObjectNameInSCCM, string sSiteIDCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInDns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltInDns(string DomainName, string OwnerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInDns", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInDnsAsync(string DomainName, string OwnerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInstallStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltInstallStatus(string sRessourceID, string sCollectionID, string sAssignmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInstallStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInstallStatusAsync(string sRessourceID, string sCollectionID, string sAssignmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltGrpAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltGrpAS400(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltGrpAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltGrpAS400Async(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltObjectSCCM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltObjectSCCM(string sDomain, string sObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltObjectSCCM", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltObjectSCCMAsync(string sDomain, string sObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltObjectSCCMByBIOSGUID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltObjectSCCMByBIOSGUID(string sSMBIOSGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltObjectSCCMByBIOSGUID", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltObjectSCCMByBIOSGUIDAsync(string sSMBIOSGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrAS400", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrAS400(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrAS400", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrAS400Async(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrEpiCARE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrEpiCARE(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrEpiCARE", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrEpiCAREAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrLotus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrLotus(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrLotus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrLotusAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrOpenDJ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrOpenDJ(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrOpenDJ", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrOpenDJAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrTelemis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrTelemis(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrTelemis", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrTelemisAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInAD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltInAD(string domainName, string objetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltInAD", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInADAsync(string domainName, string objetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrZimbra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rFunction DltUsrZimbra(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DltUsrZimbra", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrZimbraAsync(string aAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DtesUsrAD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rDates DtesUsrAD(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/DtesUsrAD", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rDates> DtesUsrADAsync(string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetAllCollections", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.st_GetCollections GetAllCollections(bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetAllCollections", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetAllCollectionsAsync(bool swsMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetAllRessourceIDInSCCMStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AccessApp.EpiService.rGetAllRessourceIDInSCCMStatus GetAllRessourceIDInSCCMStatus(bool swsDltIfNotFound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.epicura.be/GetAllRessourceIDInSCCMStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<AccessApp.EpiService.rGetAllRessourceIDInSCCMStatus> GetAllRessourceIDInSCCMStatusAsync(bool swsDltIfNotFound);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rFunction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_GetAllRessourceIDInSCCMStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ressourceIDField;
        
        private string objectNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RessourceID {
            get {
                return this.ressourceIDField;
            }
            set {
                this.ressourceIDField = value;
                this.RaisePropertyChanged("RessourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
                this.RaisePropertyChanged("ObjectName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rGetAllRessourceIDInSCCMStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_GetAllRessourceIDInSCCMStatus[] infoField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_GetAllRessourceIDInSCCMStatus[] info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
                this.RaisePropertyChanged("info");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rDates : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string lastLogonField;
        
        private string whenCreatedField;
        
        private string lastLogonXperthisField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string lastLogon {
            get {
                return this.lastLogonField;
            }
            set {
                this.lastLogonField = value;
                this.RaisePropertyChanged("lastLogon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string whenCreated {
            get {
                return this.whenCreatedField;
            }
            set {
                this.whenCreatedField = value;
                this.RaisePropertyChanged("whenCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string lastLogonXperthis {
            get {
                return this.lastLogonXperthisField;
            }
            set {
                this.lastLogonXperthisField = value;
                this.RaisePropertyChanged("lastLogonXperthis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class UsrZimbra : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string zimbraIDField;
        
        private string accountNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string displayNameField;
        
        private string zimbraAuthLdapExternalDnField;
        
        private string[] mailField;
        
        private string[] mailAliasField;
        
        private string[] memberOfField;
        
        private string[] memberOfIndirectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string zimbraID {
            get {
                return this.zimbraIDField;
            }
            set {
                this.zimbraIDField = value;
                this.RaisePropertyChanged("zimbraID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
                this.RaisePropertyChanged("accountName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("displayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string zimbraAuthLdapExternalDn {
            get {
                return this.zimbraAuthLdapExternalDnField;
            }
            set {
                this.zimbraAuthLdapExternalDnField = value;
                this.RaisePropertyChanged("zimbraAuthLdapExternalDn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public string[] MailAlias {
            get {
                return this.mailAliasField;
            }
            set {
                this.mailAliasField = value;
                this.RaisePropertyChanged("MailAlias");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public string[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
                this.RaisePropertyChanged("memberOf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public string[] memberOfIndirect {
            get {
                return this.memberOfIndirectField;
            }
            set {
                this.memberOfIndirectField = value;
                this.RaisePropertyChanged("memberOfIndirect");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrZimbra : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private UsrZimbra iRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public UsrZimbra iRet {
            get {
                return this.iRetField;
            }
            set {
                this.iRetField = value;
                this.RaisePropertyChanged("iRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrWindows : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string sAMAccountnameField;
        
        private string snField;
        
        private string givenNameField;
        
        private string initialsField;
        
        private string mailField;
        
        private string displaynameField;
        
        private string profilePathField;
        
        private string scriptPathField;
        
        private string terminalServicesProfilePathField;
        
        private string[] memberOfField;
        
        private string[] memberOfForeignDomainField;
        
        private string[] memberOfIndirectField;
        
        private string distinguishednameField;
        
        private string sIDField;
        
        private string employeeTypeField;
        
        private string preferredLanguageField;
        
        private string commentField;
        
        private string lastLogonField;
        
        private string whenCreatedField;
        
        private string lastLogonXperthisField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sAMAccountname {
            get {
                return this.sAMAccountnameField;
            }
            set {
                this.sAMAccountnameField = value;
                this.RaisePropertyChanged("sAMAccountname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sn {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
                this.RaisePropertyChanged("sn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string givenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
                this.RaisePropertyChanged("givenName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string initials {
            get {
                return this.initialsField;
            }
            set {
                this.initialsField = value;
                this.RaisePropertyChanged("initials");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string displayname {
            get {
                return this.displaynameField;
            }
            set {
                this.displaynameField = value;
                this.RaisePropertyChanged("displayname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string profilePath {
            get {
                return this.profilePathField;
            }
            set {
                this.profilePathField = value;
                this.RaisePropertyChanged("profilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string scriptPath {
            get {
                return this.scriptPathField;
            }
            set {
                this.scriptPathField = value;
                this.RaisePropertyChanged("scriptPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TerminalServicesProfilePath {
            get {
                return this.terminalServicesProfilePathField;
            }
            set {
                this.terminalServicesProfilePathField = value;
                this.RaisePropertyChanged("TerminalServicesProfilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public string[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
                this.RaisePropertyChanged("memberOf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=11)]
        public string[] memberOfForeignDomain {
            get {
                return this.memberOfForeignDomainField;
            }
            set {
                this.memberOfForeignDomainField = value;
                this.RaisePropertyChanged("memberOfForeignDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public string[] memberOfIndirect {
            get {
                return this.memberOfIndirectField;
            }
            set {
                this.memberOfIndirectField = value;
                this.RaisePropertyChanged("memberOfIndirect");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string distinguishedname {
            get {
                return this.distinguishednameField;
            }
            set {
                this.distinguishednameField = value;
                this.RaisePropertyChanged("distinguishedname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string sID {
            get {
                return this.sIDField;
            }
            set {
                this.sIDField = value;
                this.RaisePropertyChanged("sID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string employeeType {
            get {
                return this.employeeTypeField;
            }
            set {
                this.employeeTypeField = value;
                this.RaisePropertyChanged("employeeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string preferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
                this.RaisePropertyChanged("preferredLanguage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string lastLogon {
            get {
                return this.lastLogonField;
            }
            set {
                this.lastLogonField = value;
                this.RaisePropertyChanged("lastLogon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string whenCreated {
            get {
                return this.whenCreatedField;
            }
            set {
                this.whenCreatedField = value;
                this.RaisePropertyChanged("whenCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string lastLogonXperthis {
            get {
                return this.lastLogonXperthisField;
            }
            set {
                this.lastLogonXperthisField = value;
                this.RaisePropertyChanged("lastLogonXperthis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrTelemis : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string loginField;
        
        private string roleField;
        
        private string statusField;
        
        private string nameField;
        
        private string lastLoginDateField;
        
        private string lastLoginAddressField;
        
        private string lastModifDateField;
        
        private string tmHomeStatusField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
                this.RaisePropertyChanged("login");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
                this.RaisePropertyChanged("Role");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string lastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
                this.RaisePropertyChanged("lastLoginDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string lastLoginAddress {
            get {
                return this.lastLoginAddressField;
            }
            set {
                this.lastLoginAddressField = value;
                this.RaisePropertyChanged("lastLoginAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string lastModifDate {
            get {
                return this.lastModifDateField;
            }
            set {
                this.lastModifDateField = value;
                this.RaisePropertyChanged("lastModifDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string tmHomeStatus {
            get {
                return this.tmHomeStatusField;
            }
            set {
                this.tmHomeStatusField = value;
                this.RaisePropertyChanged("tmHomeStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class IDWithName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrEpiCARE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string iDEpiCAREField;
        
        private string sexEpiCAREField;
        
        private string telEpiCAREField;
        
        private string cmmEpiCAREField;
        
        private string dtNEpiCAREField;
        
        private string dtDEpiCAREField;
        
        private string dtCEpiCAREField;
        
        private string dtEEpiCAREField;
        
        private string dtSEpiCAREField;
        
        private string stsEpiCAREField;
        
        private string iDPrestAS400Field;
        
        private string sPEpiCAREField;
        
        private string srvEpiCAREField;
        
        private IDWithName[] memberOfField;
        
        private string updByField;
        
        private string updAtField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IDEpiCARE {
            get {
                return this.iDEpiCAREField;
            }
            set {
                this.iDEpiCAREField = value;
                this.RaisePropertyChanged("IDEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SexEpiCARE {
            get {
                return this.sexEpiCAREField;
            }
            set {
                this.sexEpiCAREField = value;
                this.RaisePropertyChanged("SexEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TelEpiCARE {
            get {
                return this.telEpiCAREField;
            }
            set {
                this.telEpiCAREField = value;
                this.RaisePropertyChanged("TelEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CmmEpiCARE {
            get {
                return this.cmmEpiCAREField;
            }
            set {
                this.cmmEpiCAREField = value;
                this.RaisePropertyChanged("CmmEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DtNEpiCARE {
            get {
                return this.dtNEpiCAREField;
            }
            set {
                this.dtNEpiCAREField = value;
                this.RaisePropertyChanged("DtNEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DtDEpiCARE {
            get {
                return this.dtDEpiCAREField;
            }
            set {
                this.dtDEpiCAREField = value;
                this.RaisePropertyChanged("DtDEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DtCEpiCARE {
            get {
                return this.dtCEpiCAREField;
            }
            set {
                this.dtCEpiCAREField = value;
                this.RaisePropertyChanged("DtCEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DtEEpiCARE {
            get {
                return this.dtEEpiCAREField;
            }
            set {
                this.dtEEpiCAREField = value;
                this.RaisePropertyChanged("DtEEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string DtSEpiCARE {
            get {
                return this.dtSEpiCAREField;
            }
            set {
                this.dtSEpiCAREField = value;
                this.RaisePropertyChanged("DtSEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string StsEpiCARE {
            get {
                return this.stsEpiCAREField;
            }
            set {
                this.stsEpiCAREField = value;
                this.RaisePropertyChanged("StsEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string IDPrestAS400 {
            get {
                return this.iDPrestAS400Field;
            }
            set {
                this.iDPrestAS400Field = value;
                this.RaisePropertyChanged("IDPrestAS400");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string SPEpiCARE {
            get {
                return this.sPEpiCAREField;
            }
            set {
                this.sPEpiCAREField = value;
                this.RaisePropertyChanged("SPEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string SrvEpiCARE {
            get {
                return this.srvEpiCAREField;
            }
            set {
                this.srvEpiCAREField = value;
                this.RaisePropertyChanged("SrvEpiCARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=14)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public IDWithName[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
                this.RaisePropertyChanged("memberOf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string updBy {
            get {
                return this.updByField;
            }
            set {
                this.updByField = value;
                this.RaisePropertyChanged("updBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string updAt {
            get {
                return this.updAtField;
            }
            set {
                this.updAtField = value;
                this.RaisePropertyChanged("updAt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrRXWin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string sAMAccountnameField;
        
        private long idField;
        
        private string statusField;
        
        private string profilField;
        
        private string environnementField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sAMAccountname {
            get {
                return this.sAMAccountnameField;
            }
            set {
                this.sAMAccountnameField = value;
                this.RaisePropertyChanged("sAMAccountname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string profil {
            get {
                return this.profilField;
            }
            set {
                this.profilField = value;
                this.RaisePropertyChanged("profil");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Environnement {
            get {
                return this.environnementField;
            }
            set {
                this.environnementField = value;
                this.RaisePropertyChanged("Environnement");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_UserOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sUIDField;
        
        private st_Property[] pRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sUID {
            get {
                return this.sUIDField;
            }
            set {
                this.sUIDField = value;
                this.RaisePropertyChanged("sUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_Property[] pRet {
            get {
                return this.pRetField;
            }
            set {
                this.pRetField = value;
                this.RaisePropertyChanged("pRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_Property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propertyNameField;
        
        private string propertyValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
                this.RaisePropertyChanged("PropertyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PropertyValue {
            get {
                return this.propertyValueField;
            }
            set {
                this.propertyValueField = value;
                this.RaisePropertyChanged("PropertyValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsersOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_UserOpenDJ[] infoUserField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_UserOpenDJ[] InfoUser {
            get {
                return this.infoUserField;
            }
            set {
                this.infoUserField = value;
                this.RaisePropertyChanged("InfoUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_Property[] pRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_Property[] pRet {
            get {
                return this.pRetField;
            }
            set {
                this.pRetField = value;
                this.RaisePropertyChanged("pRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvUsrLotusInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string[] fullNameField;
        
        private string mailFileField;
        
        private string mailServerField;
        
        private string internetAddressField;
        
        private string forwardingAddressField;
        
        private string[] membersField;
        
        private string[] memberOfIndirectField;
        
        private string oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MailFile {
            get {
                return this.mailFileField;
            }
            set {
                this.mailFileField = value;
                this.RaisePropertyChanged("MailFile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string MailServer {
            get {
                return this.mailServerField;
            }
            set {
                this.mailServerField = value;
                this.RaisePropertyChanged("MailServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string InternetAddress {
            get {
                return this.internetAddressField;
            }
            set {
                this.internetAddressField = value;
                this.RaisePropertyChanged("InternetAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ForwardingAddress {
            get {
                return this.forwardingAddressField;
            }
            set {
                this.forwardingAddressField = value;
                this.RaisePropertyChanged("ForwardingAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public string[] Members {
            get {
                return this.membersField;
            }
            set {
                this.membersField = value;
                this.RaisePropertyChanged("Members");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public string[] memberOfIndirect {
            get {
                return this.memberOfIndirectField;
            }
            set {
                this.memberOfIndirectField = value;
                this.RaisePropertyChanged("memberOfIndirect");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class MBACL : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string aCL4WhichField;
        
        private string aCLWhatField;
        
        private string delegationOnField;
        
        private string delegationActionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ACL4Which {
            get {
                return this.aCL4WhichField;
            }
            set {
                this.aCL4WhichField = value;
                this.RaisePropertyChanged("ACL4Which");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ACLWhat {
            get {
                return this.aCLWhatField;
            }
            set {
                this.aCLWhatField = value;
                this.RaisePropertyChanged("ACLWhat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DelegationOn {
            get {
                return this.delegationOnField;
            }
            set {
                this.delegationOnField = value;
                this.RaisePropertyChanged("DelegationOn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DelegationAction {
            get {
                return this.delegationActionField;
            }
            set {
                this.delegationActionField = value;
                this.RaisePropertyChanged("DelegationAction");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvMBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string[] fullNameField;
        
        private string mailFileField;
        
        private string mailServerField;
        
        private string sizeQuotaField;
        
        private string sizeWarningField;
        
        private MBACL[] aCLField;
        
        private string archivesField;
        
        private string oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MailFile {
            get {
                return this.mailFileField;
            }
            set {
                this.mailFileField = value;
                this.RaisePropertyChanged("MailFile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MailServer {
            get {
                return this.mailServerField;
            }
            set {
                this.mailServerField = value;
                this.RaisePropertyChanged("MailServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string SizeQuota {
            get {
                return this.sizeQuotaField;
            }
            set {
                this.sizeQuotaField = value;
                this.RaisePropertyChanged("SizeQuota");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SizeWarning {
            get {
                return this.sizeWarningField;
            }
            set {
                this.sizeWarningField = value;
                this.RaisePropertyChanged("SizeWarning");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public MBACL[] ACL {
            get {
                return this.aCLField;
            }
            set {
                this.aCLField = value;
                this.RaisePropertyChanged("ACL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Archives {
            get {
                return this.archivesField;
            }
            set {
                this.archivesField = value;
                this.RaisePropertyChanged("Archives");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_MACAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string epiIDField;
        
        private string mACAddressField;
        
        private int statusField;
        
        private string eSignField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EpiID {
            get {
                return this.epiIDField;
            }
            set {
                this.epiIDField = value;
                this.RaisePropertyChanged("EpiID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MACAddress {
            get {
                return this.mACAddressField;
            }
            set {
                this.mACAddressField = value;
                this.RaisePropertyChanged("MACAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ESign {
            get {
                return this.eSignField;
            }
            set {
                this.eSignField = value;
                this.RaisePropertyChanged("ESign");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvMACAddressFromEpiDesk : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_MACAddress[] mACAddressInfoField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_MACAddress[] MACAddressInfo {
            get {
                return this.mACAddressInfoField;
            }
            set {
                this.mACAddressInfoField = value;
                this.RaisePropertyChanged("MACAddressInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvInfoComputer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string sOSNameField;
        
        private string sOSVersionField;
        
        private string sCaptionField;
        
        private string sComputerNameField;
        
        private string sManufacturerField;
        
        private string sModelField;
        
        private string sSystemTypeField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sOSName {
            get {
                return this.sOSNameField;
            }
            set {
                this.sOSNameField = value;
                this.RaisePropertyChanged("sOSName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sOSVersion {
            get {
                return this.sOSVersionField;
            }
            set {
                this.sOSVersionField = value;
                this.RaisePropertyChanged("sOSVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string sCaption {
            get {
                return this.sCaptionField;
            }
            set {
                this.sCaptionField = value;
                this.RaisePropertyChanged("sCaption");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string sComputerName {
            get {
                return this.sComputerNameField;
            }
            set {
                this.sComputerNameField = value;
                this.RaisePropertyChanged("sComputerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string sManufacturer {
            get {
                return this.sManufacturerField;
            }
            set {
                this.sManufacturerField = value;
                this.RaisePropertyChanged("sManufacturer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string sModel {
            get {
                return this.sModelField;
            }
            set {
                this.sModelField = value;
                this.RaisePropertyChanged("sModel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string sSystemType {
            get {
                return this.sSystemTypeField;
            }
            set {
                this.sSystemTypeField = value;
                this.RaisePropertyChanged("sSystemType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_RtvGrpWin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cnField;
        
        private string sAMAccountnameField;
        
        private string sidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string cn {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
                this.RaisePropertyChanged("cn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sAMAccountname {
            get {
                return this.sAMAccountnameField;
            }
            set {
                this.sAMAccountnameField = value;
                this.RaisePropertyChanged("sAMAccountname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sid {
            get {
                return this.sidField;
            }
            set {
                this.sidField = value;
                this.RaisePropertyChanged("sid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvGrpWin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_RtvGrpWin[] iRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_RtvGrpWin[] iRet {
            get {
                return this.iRetField;
            }
            set {
                this.iRetField = value;
                this.RaisePropertyChanged("iRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_InfoGrpOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cnField;
        
        private string uidField;
        
        private string[] mbrField;
        
        private bool uniqueMemberField;
        
        private string adspathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string cn {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
                this.RaisePropertyChanged("cn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
                this.RaisePropertyChanged("uid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] Mbr {
            get {
                return this.mbrField;
            }
            set {
                this.mbrField = value;
                this.RaisePropertyChanged("Mbr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool uniqueMember {
            get {
                return this.uniqueMemberField;
            }
            set {
                this.uniqueMemberField = value;
                this.RaisePropertyChanged("uniqueMember");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string adspath {
            get {
                return this.adspathField;
            }
            set {
                this.adspathField = value;
                this.RaisePropertyChanged("adspath");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvGrpOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_InfoGrpOpenDJ[] iGrpField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_InfoGrpOpenDJ[] iGrp {
            get {
                return this.iGrpField;
            }
            set {
                this.iGrpField = value;
                this.RaisePropertyChanged("iGrp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvDLZimbra : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string dLNameField;
        
        private string[] membersField;
        
        private string[] membershipField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DLName {
            get {
                return this.dLNameField;
            }
            set {
                this.dLNameField = value;
                this.RaisePropertyChanged("DLName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] Members {
            get {
                return this.membersField;
            }
            set {
                this.membersField = value;
                this.RaisePropertyChanged("Members");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] Membership {
            get {
                return this.membershipField;
            }
            set {
                this.membershipField = value;
                this.RaisePropertyChanged("Membership");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvComputerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string sIDField;
        
        private string[] memberOfField;
        
        private string[] memberOfIndirectField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sID {
            get {
                return this.sIDField;
            }
            set {
                this.sIDField = value;
                this.RaisePropertyChanged("sID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
                this.RaisePropertyChanged("memberOf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] memberOfIndirect {
            get {
                return this.memberOfIndirectField;
            }
            set {
                this.memberOfIndirectField = value;
                this.RaisePropertyChanged("memberOfIndirect");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvBIOSGUIDFromEpiDesk : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private int idField;
        
        private string epiIDField;
        
        private string bIOSGUIDField;
        
        private int statusField;
        
        private string eSignField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EpiID {
            get {
                return this.epiIDField;
            }
            set {
                this.epiIDField = value;
                this.RaisePropertyChanged("EpiID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BIOSGUID {
            get {
                return this.bIOSGUIDField;
            }
            set {
                this.bIOSGUIDField = value;
                this.RaisePropertyChanged("BIOSGUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ESign {
            get {
                return this.eSignField;
            }
            set {
                this.eSignField = value;
                this.RaisePropertyChanged("ESign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_RtvAllUsrWindows : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sAMAccountnameField;
        
        private string snField;
        
        private string givenNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sAMAccountname {
            get {
                return this.sAMAccountnameField;
            }
            set {
                this.sAMAccountnameField = value;
                this.RaisePropertyChanged("sAMAccountname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sn {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
                this.RaisePropertyChanged("sn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string givenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
                this.RaisePropertyChanged("givenName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvAllUsrWindows : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_RtvAllUsrWindows[] iRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_RtvAllUsrWindows[] iRet {
            get {
                return this.iRetField;
            }
            set {
                this.iRetField = value;
                this.RaisePropertyChanged("iRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_RtvAllUsrOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sUIDField;
        
        private string sGivenNameField;
        
        private string sSnField;
        
        private string sDomField;
        
        private string sUsrDomField;
        
        private string sINAMIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sUID {
            get {
                return this.sUIDField;
            }
            set {
                this.sUIDField = value;
                this.RaisePropertyChanged("sUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sGivenName {
            get {
                return this.sGivenNameField;
            }
            set {
                this.sGivenNameField = value;
                this.RaisePropertyChanged("sGivenName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sSn {
            get {
                return this.sSnField;
            }
            set {
                this.sSnField = value;
                this.RaisePropertyChanged("sSn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string sDom {
            get {
                return this.sDomField;
            }
            set {
                this.sDomField = value;
                this.RaisePropertyChanged("sDom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string sUsrDom {
            get {
                return this.sUsrDomField;
            }
            set {
                this.sUsrDomField = value;
                this.RaisePropertyChanged("sUsrDom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string sINAMI {
            get {
                return this.sINAMIField;
            }
            set {
                this.sINAMIField = value;
                this.RaisePropertyChanged("sINAMI");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvAllUsrOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_RtvAllUsrOpenDJ[] iRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_RtvAllUsrOpenDJ[] iRet {
            get {
                return this.iRetField;
            }
            set {
                this.iRetField = value;
                this.RaisePropertyChanged("iRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_RtvAllMbrGrpWin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainNameField;
        
        private string sAMAccountnameField;
        
        private string sIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string domainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
                this.RaisePropertyChanged("domainName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sAMAccountname {
            get {
                return this.sAMAccountnameField;
            }
            set {
                this.sAMAccountnameField = value;
                this.RaisePropertyChanged("sAMAccountname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sID {
            get {
                return this.sIDField;
            }
            set {
                this.sIDField = value;
                this.RaisePropertyChanged("sID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvAllMbrGrpWin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_RtvAllMbrGrpWin[] oMemberField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_RtvAllMbrGrpWin[] oMember {
            get {
                return this.oMemberField;
            }
            set {
                this.oMemberField = value;
                this.RaisePropertyChanged("oMember");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_DLZimbra : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string zimbraIDField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string zimbraID {
            get {
                return this.zimbraIDField;
            }
            set {
                this.zimbraIDField = value;
                this.RaisePropertyChanged("zimbraID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvAllDLZimbra : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_DLZimbra[] iRetField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_DLZimbra[] iRet {
            get {
                return this.iRetField;
            }
            set {
                this.iRetField = value;
                this.RaisePropertyChanged("iRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtvALLComputer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string[] computerNameField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
                this.RaisePropertyChanged("computerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRtnInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string sFirstNameField;
        
        private string sLastNameField;
        
        private string sFullNameField;
        
        private string sInitialField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sFirstName {
            get {
                return this.sFirstNameField;
            }
            set {
                this.sFirstNameField = value;
                this.RaisePropertyChanged("sFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sLastName {
            get {
                return this.sLastNameField;
            }
            set {
                this.sLastNameField = value;
                this.RaisePropertyChanged("sLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string sFullName {
            get {
                return this.sFullNameField;
            }
            set {
                this.sFullNameField = value;
                this.RaisePropertyChanged("sFullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string sInitial {
            get {
                return this.sInitialField;
            }
            set {
                this.sInitialField = value;
                this.RaisePropertyChanged("sInitial");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_InfoUsrOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uidField;
        
        private string epicuradomainField;
        
        private string epicuradomainuserField;
        
        private string oField;
        
        private string givennameField;
        
        private string snField;
        
        private string cnField;
        
        private string mailField;
        
        private string channelaccessField;
        
        private string inamiField;
        
        private string labeledURIField;
        
        private string destinationindicatorField;
        
        private string telephonenumberField;
        
        private string mobileField;
        
        private string homePhoneField;
        
        private string facsimileTelephoneNumberField;
        
        private string lField;
        
        private string departmentNumberField;
        
        private string employeeTypeField;
        
        private string[] memberofField;
        
        private string adspathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
                this.RaisePropertyChanged("uid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string epicuradomain {
            get {
                return this.epicuradomainField;
            }
            set {
                this.epicuradomainField = value;
                this.RaisePropertyChanged("epicuradomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string epicuradomainuser {
            get {
                return this.epicuradomainuserField;
            }
            set {
                this.epicuradomainuserField = value;
                this.RaisePropertyChanged("epicuradomainuser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string o {
            get {
                return this.oField;
            }
            set {
                this.oField = value;
                this.RaisePropertyChanged("o");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string givenname {
            get {
                return this.givennameField;
            }
            set {
                this.givennameField = value;
                this.RaisePropertyChanged("givenname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string sn {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
                this.RaisePropertyChanged("sn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string cn {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
                this.RaisePropertyChanged("cn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string channelaccess {
            get {
                return this.channelaccessField;
            }
            set {
                this.channelaccessField = value;
                this.RaisePropertyChanged("channelaccess");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string inami {
            get {
                return this.inamiField;
            }
            set {
                this.inamiField = value;
                this.RaisePropertyChanged("inami");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string labeledURI {
            get {
                return this.labeledURIField;
            }
            set {
                this.labeledURIField = value;
                this.RaisePropertyChanged("labeledURI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string destinationindicator {
            get {
                return this.destinationindicatorField;
            }
            set {
                this.destinationindicatorField = value;
                this.RaisePropertyChanged("destinationindicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string telephonenumber {
            get {
                return this.telephonenumberField;
            }
            set {
                this.telephonenumberField = value;
                this.RaisePropertyChanged("telephonenumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
                this.RaisePropertyChanged("mobile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
                this.RaisePropertyChanged("homePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string facsimileTelephoneNumber {
            get {
                return this.facsimileTelephoneNumberField;
            }
            set {
                this.facsimileTelephoneNumberField = value;
                this.RaisePropertyChanged("facsimileTelephoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string l {
            get {
                return this.lField;
            }
            set {
                this.lField = value;
                this.RaisePropertyChanged("l");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string departmentNumber {
            get {
                return this.departmentNumberField;
            }
            set {
                this.departmentNumberField = value;
                this.RaisePropertyChanged("departmentNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string employeeType {
            get {
                return this.employeeTypeField;
            }
            set {
                this.employeeTypeField = value;
                this.RaisePropertyChanged("employeeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=19)]
        public string[] memberof {
            get {
                return this.memberofField;
            }
            set {
                this.memberofField = value;
                this.RaisePropertyChanged("memberof");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string adspath {
            get {
                return this.adspathField;
            }
            set {
                this.adspathField = value;
                this.RaisePropertyChanged("adspath");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rReadInOpenDJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_InfoUsrOpenDJ[] infoOpenDJField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_InfoUsrOpenDJ[] InfoOpenDJ {
            get {
                return this.infoOpenDJField;
            }
            set {
                this.infoOpenDJField = value;
                this.RaisePropertyChanged("InfoOpenDJ");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_SCCMStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string collectionIDField;
        
        private string assignmentIDField;
        
        private System.DateTime logDateField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CollectionID {
            get {
                return this.collectionIDField;
            }
            set {
                this.collectionIDField = value;
                this.RaisePropertyChanged("CollectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AssignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
                this.RaisePropertyChanged("AssignmentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime LogDate {
            get {
                return this.logDateField;
            }
            set {
                this.logDateField = value;
                this.RaisePropertyChanged("LogDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rSCCMStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_SCCMStatus[] logStatusField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_SCCMStatus[] LogStatus {
            get {
                return this.logStatusField;
            }
            set {
                this.logStatusField = value;
                this.RaisePropertyChanged("LogStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rGetTSLogsInstallWindows : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string bIOSGUIDField;
        
        private string domainUserField;
        
        private string userNameField;
        
        private string tSNameField;
        
        private string dateInstallField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BIOSGUID {
            get {
                return this.bIOSGUIDField;
            }
            set {
                this.bIOSGUIDField = value;
                this.RaisePropertyChanged("BIOSGUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DomainUser {
            get {
                return this.domainUserField;
            }
            set {
                this.domainUserField = value;
                this.RaisePropertyChanged("DomainUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TSName {
            get {
                return this.tSNameField;
            }
            set {
                this.tSNameField = value;
                this.RaisePropertyChanged("TSName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DateInstall {
            get {
                return this.dateInstallField;
            }
            set {
                this.dateInstallField = value;
                this.RaisePropertyChanged("DateInstall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rRegistry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sNameField;
        
        private string sValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
                this.RaisePropertyChanged("sName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sValue {
            get {
                return this.sValueField;
            }
            set {
                this.sValueField = value;
                this.RaisePropertyChanged("sValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rGetRegistry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private rRegistry[] registrysField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public rRegistry[] Registrys {
            get {
                return this.registrysField;
            }
            set {
                this.registrysField = value;
                this.RaisePropertyChanged("Registrys");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_Printer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private bool isDefaultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
                this.RaisePropertyChanged("isDefault");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rGetPrinters : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_Printer[] printersField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_Printer[] Printers {
            get {
                return this.printersField;
            }
            set {
                this.printersField = value;
                this.RaisePropertyChanged("Printers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_GetObjectSCCM : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private int resourceIDField;
        
        private string nameField;
        
        private string typeObjectField;
        
        private string bIOSGUIDField;
        
        private string osField;
        
        private st_CollectionSCCM[] collectionsField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
                this.RaisePropertyChanged("resourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string typeObject {
            get {
                return this.typeObjectField;
            }
            set {
                this.typeObjectField = value;
                this.RaisePropertyChanged("typeObject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BIOSGUID {
            get {
                return this.bIOSGUIDField;
            }
            set {
                this.bIOSGUIDField = value;
                this.RaisePropertyChanged("BIOSGUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OS {
            get {
                return this.osField;
            }
            set {
                this.osField = value;
                this.RaisePropertyChanged("OS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_CollectionSCCM[] Collections {
            get {
                return this.collectionsField;
            }
            set {
                this.collectionsField = value;
                this.RaisePropertyChanged("Collections");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_CollectionSCCM : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal collectionIDField;
        
        private string siteIDField;
        
        private string collectionNameField;
        
        private string collectionTypeField;
        
        private st_AssignmentSCCM[] assignmentsField;
        
        private string[] membersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal CollectionID {
            get {
                return this.collectionIDField;
            }
            set {
                this.collectionIDField = value;
                this.RaisePropertyChanged("CollectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
                this.RaisePropertyChanged("SiteID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CollectionName {
            get {
                return this.collectionNameField;
            }
            set {
                this.collectionNameField = value;
                this.RaisePropertyChanged("CollectionName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CollectionType {
            get {
                return this.collectionTypeField;
            }
            set {
                this.collectionTypeField = value;
                this.RaisePropertyChanged("CollectionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_AssignmentSCCM[] Assignments {
            get {
                return this.assignmentsField;
            }
            set {
                this.assignmentsField = value;
                this.RaisePropertyChanged("Assignments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] Members {
            get {
                return this.membersField;
            }
            set {
                this.membersField = value;
                this.RaisePropertyChanged("Members");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_AssignmentSCCM : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal assignmentIDField;
        
        private decimal cI_IDField;
        
        private string displayNameField;
        
        private string titleField;
        
        private string versionField;
        
        private string publisherField;
        
        private string descriptionField;
        
        private string osField;
        
        private st_Rule[] rulesField;
        
        private string infoUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal AssignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
                this.RaisePropertyChanged("AssignmentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal CI_ID {
            get {
                return this.cI_IDField;
            }
            set {
                this.cI_IDField = value;
                this.RaisePropertyChanged("CI_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("displayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Publisher {
            get {
                return this.publisherField;
            }
            set {
                this.publisherField = value;
                this.RaisePropertyChanged("Publisher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string OS {
            get {
                return this.osField;
            }
            set {
                this.osField = value;
                this.RaisePropertyChanged("OS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_Rule[] Rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
                this.RaisePropertyChanged("Rules");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string InfoUrl {
            get {
                return this.infoUrlField;
            }
            set {
                this.infoUrlField = value;
                this.RaisePropertyChanged("InfoUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_Rule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ruleNameField;
        
        private string ruleTypeField;
        
        private string ruleOperatorField;
        
        private string ruleExpressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RuleName {
            get {
                return this.ruleNameField;
            }
            set {
                this.ruleNameField = value;
                this.RaisePropertyChanged("RuleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RuleType {
            get {
                return this.ruleTypeField;
            }
            set {
                this.ruleTypeField = value;
                this.RaisePropertyChanged("RuleType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RuleOperator {
            get {
                return this.ruleOperatorField;
            }
            set {
                this.ruleOperatorField = value;
                this.RaisePropertyChanged("RuleOperator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string RuleExpression {
            get {
                return this.ruleExpressionField;
            }
            set {
                this.ruleExpressionField = value;
                this.RaisePropertyChanged("RuleExpression");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_GetCollection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_CollectionSCCM collectionInfoField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public st_CollectionSCCM CollectionInfo {
            get {
                return this.collectionInfoField;
            }
            set {
                this.collectionInfoField = value;
                this.RaisePropertyChanged("CollectionInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_GetCollections : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_CollectionSCCM[] collectionInfoField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_CollectionSCCM[] CollectionInfo {
            get {
                return this.collectionInfoField;
            }
            set {
                this.collectionInfoField = value;
                this.RaisePropertyChanged("CollectionInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_GetAssignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_AssignmentSCCM assignmentInfoField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public st_AssignmentSCCM AssignmentInfo {
            get {
                return this.assignmentInfoField;
            }
            set {
                this.assignmentInfoField = value;
                this.RaisePropertyChanged("AssignmentInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class TimeSpan : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_QueryUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string sessionField;
        
        private int idField;
        
        private string statusField;
        
        private TimeSpan idleTimeField;
        
        private System.DateTime logonTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
                this.RaisePropertyChanged("Session");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public TimeSpan IdleTime {
            get {
                return this.idleTimeField;
            }
            set {
                this.idleTimeField = value;
                this.RaisePropertyChanged("IdleTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime LogonTime {
            get {
                return this.logonTimeField;
            }
            set {
                this.logonTimeField = value;
                this.RaisePropertyChanged("LogonTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rWhoami : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string hostNameField;
        
        private string ipAddressField;
        
        private st_QueryUser[] userNameField;
        
        private string oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string HostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
                this.RaisePropertyChanged("HostName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
                this.RaisePropertyChanged("ipAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_QueryUser[] UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rWakeOnLan : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string computerNameField;
        
        private string ipAddressField;
        
        private string mACAddressField;
        
        private string broadcastField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
                this.RaisePropertyChanged("computerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
                this.RaisePropertyChanged("ipAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MACAddress {
            get {
                return this.mACAddressField;
            }
            set {
                this.mACAddressField = value;
                this.RaisePropertyChanged("MACAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string broadcast {
            get {
                return this.broadcastField;
            }
            set {
                this.broadcastField = value;
                this.RaisePropertyChanged("broadcast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rSCCMAction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sActionField;
        
        private string sActionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sAction {
            get {
                return this.sActionField;
            }
            set {
                this.sActionField = value;
                this.RaisePropertyChanged("sAction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sActionID {
            get {
                return this.sActionIDField;
            }
            set {
                this.sActionIDField = value;
                this.RaisePropertyChanged("sActionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rTriggerAction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private rSCCMAction[] sCCMActionsField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public rSCCMAction[] SCCMActions {
            get {
                return this.sCCMActionsField;
            }
            set {
                this.sCCMActionsField = value;
                this.RaisePropertyChanged("SCCMActions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_AssignmentStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string appNameField;
        
        private eAppStatusType appStatusTypeField;
        
        private int assignmentIDField;
        
        private string collectionIDField;
        
        private string collectionNameField;
        
        private eDeploymentIntent deploymentIntentField;
        
        private eEnforcementState enforcementStateField;
        
        private eInstalledState installedStateField;
        
        private System.DateTime startTimeField;
        
        private eStatusType statusTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
                this.RaisePropertyChanged("AppName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public eAppStatusType AppStatusType {
            get {
                return this.appStatusTypeField;
            }
            set {
                this.appStatusTypeField = value;
                this.RaisePropertyChanged("AppStatusType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int AssignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
                this.RaisePropertyChanged("AssignmentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CollectionID {
            get {
                return this.collectionIDField;
            }
            set {
                this.collectionIDField = value;
                this.RaisePropertyChanged("CollectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CollectionName {
            get {
                return this.collectionNameField;
            }
            set {
                this.collectionNameField = value;
                this.RaisePropertyChanged("CollectionName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public eDeploymentIntent DeploymentIntent {
            get {
                return this.deploymentIntentField;
            }
            set {
                this.deploymentIntentField = value;
                this.RaisePropertyChanged("DeploymentIntent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public eEnforcementState EnforcementState {
            get {
                return this.enforcementStateField;
            }
            set {
                this.enforcementStateField = value;
                this.RaisePropertyChanged("EnforcementState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public eInstalledState InstalledState {
            get {
                return this.installedStateField;
            }
            set {
                this.installedStateField = value;
                this.RaisePropertyChanged("InstalledState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public eStatusType StatusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
                this.RaisePropertyChanged("StatusType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public enum eAppStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        RequirementsNotMet,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Err,
        
        /// <remarks/>
        Null,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public enum eDeploymentIntent {
        
        /// <remarks/>
        Install,
        
        /// <remarks/>
        Uninstall,
        
        /// <remarks/>
        Preflight,
        
        /// <remarks/>
        Null,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public enum eEnforcementState {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Already_Compliant,
        
        /// <remarks/>
        Simulate_Success,
        
        /// <remarks/>
        In_progress,
        
        /// <remarks/>
        Waiting_for_content,
        
        /// <remarks/>
        Installing,
        
        /// <remarks/>
        Restart_to_continue,
        
        /// <remarks/>
        Waiting_for_maintenance_window,
        
        /// <remarks/>
        Waiting_for_schedule,
        
        /// <remarks/>
        Downloading_dependent_content,
        
        /// <remarks/>
        Installing_dependent_content,
        
        /// <remarks/>
        Restart_to_complete,
        
        /// <remarks/>
        Content_downloaded,
        
        /// <remarks/>
        Waiting_for_update,
        
        /// <remarks/>
        Waiting_for_user_session_reconnect,
        
        /// <remarks/>
        Waiting_for_user_logoff,
        
        /// <remarks/>
        Waiting_for_user_logon,
        
        /// <remarks/>
        Waiting_To_Install,
        
        /// <remarks/>
        Waiting_Retry_2015,
        
        /// <remarks/>
        Waiting_For_Presentation_Mode,
        
        /// <remarks/>
        Waiting_For_Orchestration,
        
        /// <remarks/>
        Waiting_For_Network,
        
        /// <remarks/>
        Pending_AppV_Virtual_Environment_Update,
        
        /// <remarks/>
        Updating_AppV_Virtual_Environment,
        
        /// <remarks/>
        Requirements_not_met,
        
        /// <remarks/>
        Host_Platform_Not_Applicable,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Deployment_failed_5000,
        
        /// <remarks/>
        Evaluation_failed,
        
        /// <remarks/>
        Deployment_failed_5002,
        
        /// <remarks/>
        Failed_to_locate_content,
        
        /// <remarks/>
        Dependency_installation_failed,
        
        /// <remarks/>
        Failed_to_download_dependent_content,
        
        /// <remarks/>
        Conflicts_with_another_application_deployment,
        
        /// <remarks/>
        Waiting_Retry_5007,
        
        /// <remarks/>
        Failed_to_uninstall_superseded_deployment_type,
        
        /// <remarks/>
        Failed_to_download_superseded_deployment_type,
        
        /// <remarks/>
        Failed_to_updating_AppV_Virtual_Environment,
        
        /// <remarks/>
        Null,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public enum eInstalledState {
        
        /// <remarks/>
        Uninstall,
        
        /// <remarks/>
        Install,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Null,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public enum eStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        RequirementsNotMet,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Err,
        
        /// <remarks/>
        Null,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class st_StatusDeployment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private st_AssignmentStatus[] assignmentStatusField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public st_AssignmentStatus[] AssignmentStatus {
            get {
                return this.assignmentStatusField;
            }
            set {
                this.assignmentStatusField = value;
                this.RaisePropertyChanged("AssignmentStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class Records : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] fieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
                this.RaisePropertyChanged("Fields");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.epicura.be/")]
    public partial class rResultSelect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nRetField;
        
        private string[] descriptifField;
        
        private Records[] recField;
        
        private object oRetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nRet {
            get {
                return this.nRetField;
            }
            set {
                this.nRetField = value;
                this.RaisePropertyChanged("nRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] Descriptif {
            get {
                return this.descriptifField;
            }
            set {
                this.descriptifField = value;
                this.RaisePropertyChanged("Descriptif");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Records[] Rec {
            get {
                return this.recField;
            }
            set {
                this.recField = value;
                this.RaisePropertyChanged("Rec");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public object oRet {
            get {
                return this.oRetField;
            }
            set {
                this.oRetField = value;
                this.RaisePropertyChanged("oRet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SndAndRcvSocket", WrapperNamespace="http://www.epicura.be/", IsWrapped=true)]
    public partial class SndAndRcvSocketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=0)]
        public string aMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=1)]
        public string aQui;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=2)]
        public string aPort;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=3)]
        public string aCtrlID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=4)]
        public string typeACK;
        
        public SndAndRcvSocketRequest() {
        }
        
        public SndAndRcvSocketRequest(string aMessage, string aQui, string aPort, string aCtrlID, string typeACK) {
            this.aMessage = aMessage;
            this.aQui = aQui;
            this.aPort = aPort;
            this.aCtrlID = aCtrlID;
            this.typeACK = typeACK;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SndAndRcvSocketResponse", WrapperNamespace="http://www.epicura.be/", IsWrapped=true)]
    public partial class SndAndRcvSocketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=0)]
        public AccessApp.EpiService.rFunction SndAndRcvSocketResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.epicura.be/", Order=1)]
        public string aCtrlID;
        
        public SndAndRcvSocketResponse() {
        }
        
        public SndAndRcvSocketResponse(AccessApp.EpiService.rFunction SndAndRcvSocketResult, string aCtrlID) {
            this.SndAndRcvSocketResult = SndAndRcvSocketResult;
            this.aCtrlID = aCtrlID;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MyServicesSoapChannel : AccessApp.EpiService.MyServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServicesSoapClient : System.ServiceModel.ClientBase<AccessApp.EpiService.MyServicesSoap>, AccessApp.EpiService.MyServicesSoap {
        
        public MyServicesSoapClient() {
        }
        
        public MyServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AccessApp.EpiService.rFunction RtvZimbraIDDL(string aDistributionListName) {
            return base.Channel.RtvZimbraIDDL(aDistributionListName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvZimbraIDDLAsync(string aDistributionListName) {
            return base.Channel.RtvZimbraIDDLAsync(aDistributionListName);
        }
        
        public AccessApp.EpiService.rFunction RunSCCMAction(string sComputerName, string sTriggerAction) {
            return base.Channel.RunSCCMAction(sComputerName, sTriggerAction);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunSCCMActionAsync(string sComputerName, string sTriggerAction) {
            return base.Channel.RunSCCMActionAsync(sComputerName, sTriggerAction);
        }
        
        public AccessApp.EpiService.rResultSelect RunSelectSQLCmd(string myCmd, string myDB) {
            return base.Channel.RunSelectSQLCmd(myCmd, myDB);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RunSelectSQLCmdAsync(string myCmd, string myDB) {
            return base.Channel.RunSelectSQLCmdAsync(myCmd, myDB);
        }
        
        public AccessApp.EpiService.rFunction RunCmdOnAS400(string myCmd) {
            return base.Channel.RunCmdOnAS400(myCmd);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunCmdOnAS400Async(string myCmd) {
            return base.Channel.RunCmdOnAS400Async(myCmd);
        }
        
        public AccessApp.EpiService.rFunction RunNoSelectSQLCmd(string myCmd, string myDB) {
            return base.Channel.RunNoSelectSQLCmd(myCmd, myDB);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RunNoSelectSQLCmdAsync(string myCmd, string myDB) {
            return base.Channel.RunNoSelectSQLCmdAsync(myCmd, myDB);
        }
        
        public AccessApp.EpiService.rFunction SearchDC(string domainName, bool swsAll, bool swsActif) {
            return base.Channel.SearchDC(domainName, swsAll, swsActif);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SearchDCAsync(string domainName, bool swsAll, bool swsActif) {
            return base.Channel.SearchDCAsync(domainName, swsAll, swsActif);
        }
        
        public AccessApp.EpiService.rFunction SearchUsrID(string domainName, string myFilter, string aResultFields) {
            return base.Channel.SearchUsrID(domainName, myFilter, aResultFields);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SearchUsrIDAsync(string domainName, string myFilter, string aResultFields) {
            return base.Channel.SearchUsrIDAsync(domainName, myFilter, aResultFields);
        }
        
        public AccessApp.EpiService.rFunction SetBIOSGUIDToEpiDesk(string sEpiID, string sBIOSGUID, string ESign) {
            return base.Channel.SetBIOSGUIDToEpiDesk(sEpiID, sBIOSGUID, ESign);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetBIOSGUIDToEpiDeskAsync(string sEpiID, string sBIOSGUID, string ESign) {
            return base.Channel.SetBIOSGUIDToEpiDeskAsync(sEpiID, sBIOSGUID, ESign);
        }
        
        public AccessApp.EpiService.rFunction SetMACAddressToEpiDesk(string sEpiID, string AllMACAddress, string ESign) {
            return base.Channel.SetMACAddressToEpiDesk(sEpiID, AllMACAddress, ESign);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetMACAddressToEpiDeskAsync(string sEpiID, string AllMACAddress, string ESign) {
            return base.Channel.SetMACAddressToEpiDeskAsync(sEpiID, AllMACAddress, ESign);
        }
        
        public AccessApp.EpiService.rFunction SetTSLogsInstallWindows(string sBIOSGUID, string sDomainUser, string sUserName, string sTSName) {
            return base.Channel.SetTSLogsInstallWindows(sBIOSGUID, sDomainUser, sUserName, sTSName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetTSLogsInstallWindowsAsync(string sBIOSGUID, string sDomainUser, string sUserName, string sTSName) {
            return base.Channel.SetTSLogsInstallWindowsAsync(sBIOSGUID, sDomainUser, sUserName, sTSName);
        }
        
        public AccessApp.EpiService.rFunction SetSCCMStatus(string sDomainName, string sObjectName, string sAssignmentName, string sStatus) {
            return base.Channel.SetSCCMStatus(sDomainName, sObjectName, sAssignmentName, sStatus);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetSCCMStatusAsync(string sDomainName, string sObjectName, string sAssignmentName, string sStatus) {
            return base.Channel.SetSCCMStatusAsync(sDomainName, sObjectName, sAssignmentName, sStatus);
        }
        
        public AccessApp.EpiService.rFunction SetVersionPackages() {
            return base.Channel.SetVersionPackages();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SetVersionPackagesAsync() {
            return base.Channel.SetVersionPackagesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AccessApp.EpiService.SndAndRcvSocketResponse AccessApp.EpiService.MyServicesSoap.SndAndRcvSocket(AccessApp.EpiService.SndAndRcvSocketRequest request) {
            return base.Channel.SndAndRcvSocket(request);
        }
        
        public AccessApp.EpiService.rFunction SndAndRcvSocket(string aMessage, string aQui, string aPort, ref string aCtrlID, string typeACK) {
            AccessApp.EpiService.SndAndRcvSocketRequest inValue = new AccessApp.EpiService.SndAndRcvSocketRequest();
            inValue.aMessage = aMessage;
            inValue.aQui = aQui;
            inValue.aPort = aPort;
            inValue.aCtrlID = aCtrlID;
            inValue.typeACK = typeACK;
            AccessApp.EpiService.SndAndRcvSocketResponse retVal = ((AccessApp.EpiService.MyServicesSoap)(this)).SndAndRcvSocket(inValue);
            aCtrlID = retVal.aCtrlID;
            return retVal.SndAndRcvSocketResult;
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.SndAndRcvSocketResponse> SndAndRcvSocketAsync(AccessApp.EpiService.SndAndRcvSocketRequest request) {
            return base.Channel.SndAndRcvSocketAsync(request);
        }
        
        public AccessApp.EpiService.rFunction SndDtaqAS400(string dtaqName, string dtaqLib, string data) {
            return base.Channel.SndDtaqAS400(dtaqName, dtaqLib, data);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SndDtaqAS400Async(string dtaqName, string dtaqLib, string data) {
            return base.Channel.SndDtaqAS400Async(dtaqName, dtaqLib, data);
        }
        
        public AccessApp.EpiService.st_StatusDeployment StatusDeploymentByMachineName(string sMachineName) {
            return base.Channel.StatusDeploymentByMachineName(sMachineName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_StatusDeployment> StatusDeploymentByMachineNameAsync(string sMachineName) {
            return base.Channel.StatusDeploymentByMachineNameAsync(sMachineName);
        }
        
        public AccessApp.EpiService.rFunction SynDC(string domainName) {
            return base.Channel.SynDC(domainName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> SynDCAsync(string domainName) {
            return base.Channel.SynDCAsync(domainName);
        }
        
        public AccessApp.EpiService.rTriggerAction TriggerCodes(string sCode) {
            return base.Channel.TriggerCodes(sCode);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rTriggerAction> TriggerCodesAsync(string sCode) {
            return base.Channel.TriggerCodesAsync(sCode);
        }
        
        public AccessApp.EpiService.rFunction UpdPropLdapOpenDJ(string sUID, string sPropName, string sPropValue) {
            return base.Channel.UpdPropLdapOpenDJ(sUID, sPropName, sPropValue);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdPropLdapOpenDJAsync(string sUID, string sPropName, string sPropValue) {
            return base.Channel.UpdPropLdapOpenDJAsync(sUID, sPropName, sPropValue);
        }
        
        public AccessApp.EpiService.rFunction UpdPropLdapWin(string domainName, string objectName, string propertyName, string newValue) {
            return base.Channel.UpdPropLdapWin(domainName, objectName, propertyName, newValue);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdPropLdapWinAsync(string domainName, string objectName, string propertyName, string newValue) {
            return base.Channel.UpdPropLdapWinAsync(domainName, objectName, propertyName, newValue);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrAS400(string userName, string displayName) {
            return base.Channel.UpdUsrAS400(userName, displayName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrAS400Async(string userName, string displayName) {
            return base.Channel.UpdUsrAS400Async(userName, displayName);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrLotus(string OldUserName, string NewUserName, string sn, string givenName, string mail, string password, string sGrp) {
            return base.Channel.UpdUsrLotus(OldUserName, NewUserName, sn, givenName, mail, password, sGrp);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrLotusAsync(string OldUserName, string NewUserName, string sn, string givenName, string mail, string password, string sGrp) {
            return base.Channel.UpdUsrLotusAsync(OldUserName, NewUserName, sn, givenName, mail, password, sGrp);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrOpenDJ(string sOldUserName, string sEpicuraDomain, string sEpicuraDomainUser, string sNewUserName, string sGivenName, string sSn, string sINAMI, string sMail, string sMobile, string sChannelAccess, bool swsTestAD) {
            return base.Channel.UpdUsrOpenDJ(sOldUserName, sEpicuraDomain, sEpicuraDomainUser, sNewUserName, sGivenName, sSn, sINAMI, sMail, sMobile, sChannelAccess, swsTestAD);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrOpenDJAsync(string sOldUserName, string sEpicuraDomain, string sEpicuraDomainUser, string sNewUserName, string sGivenName, string sSn, string sINAMI, string sMail, string sMobile, string sChannelAccess, bool swsTestAD) {
            return base.Channel.UpdUsrOpenDJAsync(sOldUserName, sEpicuraDomain, sEpicuraDomainUser, sNewUserName, sGivenName, sSn, sINAMI, sMail, sMobile, sChannelAccess, swsTestAD);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrOpenDJ4Phone(
                    string sOldUserName, 
                    string sEpicuraDomain, 
                    string sEpicuraDomainUser, 
                    string sNewUserName, 
                    string sGivenName, 
                    string sSn, 
                    string sINAMI, 
                    string sMail, 
                    string sMobile, 
                    string sChannelAccess, 
                    string sO, 
                    string sLabeledURI, 
                    string sFacsimileTelephoneNumber, 
                    string sHomePhone, 
                    string sL, 
                    string sDepartmentNumber, 
                    string SEmployeeType, 
                    string sDestinationIndicator, 
                    string sTelephoneNumber, 
                    bool swsTestAD) {
            return base.Channel.UpdUsrOpenDJ4Phone(sOldUserName, sEpicuraDomain, sEpicuraDomainUser, sNewUserName, sGivenName, sSn, sINAMI, sMail, sMobile, sChannelAccess, sO, sLabeledURI, sFacsimileTelephoneNumber, sHomePhone, sL, sDepartmentNumber, SEmployeeType, sDestinationIndicator, sTelephoneNumber, swsTestAD);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrOpenDJ4PhoneAsync(
                    string sOldUserName, 
                    string sEpicuraDomain, 
                    string sEpicuraDomainUser, 
                    string sNewUserName, 
                    string sGivenName, 
                    string sSn, 
                    string sINAMI, 
                    string sMail, 
                    string sMobile, 
                    string sChannelAccess, 
                    string sO, 
                    string sLabeledURI, 
                    string sFacsimileTelephoneNumber, 
                    string sHomePhone, 
                    string sL, 
                    string sDepartmentNumber, 
                    string SEmployeeType, 
                    string sDestinationIndicator, 
                    string sTelephoneNumber, 
                    bool swsTestAD) {
            return base.Channel.UpdUsrOpenDJ4PhoneAsync(sOldUserName, sEpicuraDomain, sEpicuraDomainUser, sNewUserName, sGivenName, sSn, sINAMI, sMail, sMobile, sChannelAccess, sO, sLabeledURI, sFacsimileTelephoneNumber, sHomePhone, sL, sDepartmentNumber, SEmployeeType, sDestinationIndicator, sTelephoneNumber, swsTestAD);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrRXWin(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil, bool actif) {
            return base.Channel.UpdUsrRXWin(username, displayName, CommUtil, EnvDefaut, Initiales, Profil, actif);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrRXWinAsync(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil, bool actif) {
            return base.Channel.UpdUsrRXWinAsync(username, displayName, CommUtil, EnvDefaut, Initiales, Profil, actif);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrTelemis(string userName, string password) {
            return base.Channel.UpdUsrTelemis(userName, password);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrTelemisAsync(string userName, string password) {
            return base.Channel.UpdUsrTelemisAsync(userName, password);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrWin(
                    string domainName, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string sMemberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment) {
            return base.Channel.UpdUsrWin(domainName, userName, sn, givenName, initials, displayName, mail, profilePath, scriptPath, TerminalServicesProfilePath, password, restreint, sMemberOf, employeeType, preferredLanguage, comment);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrWinAsync(
                    string domainName, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string sMemberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment) {
            return base.Channel.UpdUsrWinAsync(domainName, userName, sn, givenName, initials, displayName, mail, profilePath, scriptPath, TerminalServicesProfilePath, password, restreint, sMemberOf, employeeType, preferredLanguage, comment);
        }
        
        public AccessApp.EpiService.rFunction UpdUsrZimbra(string aOldAccount, string aAccount, string aPassword, string aFirstName, string aLastName, string aMailAlias, string aMemberOf) {
            return base.Channel.UpdUsrZimbra(aOldAccount, aAccount, aPassword, aFirstName, aLastName, aMailAlias, aMemberOf);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> UpdUsrZimbraAsync(string aOldAccount, string aAccount, string aPassword, string aFirstName, string aLastName, string aMailAlias, string aMemberOf) {
            return base.Channel.UpdUsrZimbraAsync(aOldAccount, aAccount, aPassword, aFirstName, aLastName, aMailAlias, aMemberOf);
        }
        
        public AccessApp.EpiService.rWakeOnLan WakeOnLan(string computerName) {
            return base.Channel.WakeOnLan(computerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rWakeOnLan> WakeOnLanAsync(string computerName) {
            return base.Channel.WakeOnLanAsync(computerName);
        }
        
        public AccessApp.EpiService.rWhoami Whoami(string sIP, string sComputerName) {
            return base.Channel.Whoami(sIP, sComputerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rWhoami> WhoamiAsync(string sIP, string sComputerName) {
            return base.Channel.WhoamiAsync(sIP, sComputerName);
        }
        
        public AccessApp.EpiService.st_GetAssignment GetApplicationByAssignmentID(string sAssignmentID) {
            return base.Channel.GetApplicationByAssignmentID(sAssignmentID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetAssignment> GetApplicationByAssignmentIDAsync(string sAssignmentID) {
            return base.Channel.GetApplicationByAssignmentIDAsync(sAssignmentID);
        }
        
        public AccessApp.EpiService.st_GetCollections GetCollectionByApplicationName(string ApplicationName, bool swsMembers) {
            return base.Channel.GetCollectionByApplicationName(ApplicationName, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetCollectionByApplicationNameAsync(string ApplicationName, bool swsMembers) {
            return base.Channel.GetCollectionByApplicationNameAsync(ApplicationName, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetCollection GetCollectionByCollectionID(string sCollectionID, bool swsMembers) {
            return base.Channel.GetCollectionByCollectionID(sCollectionID, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByCollectionIDAsync(string sCollectionID, bool swsMembers) {
            return base.Channel.GetCollectionByCollectionIDAsync(sCollectionID, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetCollection GetCollectionByCollectionName(string sCollectionName, bool swsMembers) {
            return base.Channel.GetCollectionByCollectionName(sCollectionName, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByCollectionNameAsync(string sCollectionName, bool swsMembers) {
            return base.Channel.GetCollectionByCollectionNameAsync(sCollectionName, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetCollection GetCollectionByGroupName(string domainName, string GroupName, bool swsMembers) {
            return base.Channel.GetCollectionByGroupName(domainName, GroupName, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionByGroupNameAsync(string domainName, string GroupName, bool swsMembers) {
            return base.Channel.GetCollectionByGroupNameAsync(domainName, GroupName, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetCollection GetCollectionBySiteID(string sSiteID, bool swsMembers) {
            return base.Channel.GetCollectionBySiteID(sSiteID, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetCollectionBySiteIDAsync(string sSiteID, bool swsMembers) {
            return base.Channel.GetCollectionBySiteIDAsync(sSiteID, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetCollections GetCollectionsByType(string typeCollection, bool swsMembers) {
            return base.Channel.GetCollectionsByType(typeCollection, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetCollectionsByTypeAsync(string typeCollection, bool swsMembers) {
            return base.Channel.GetCollectionsByTypeAsync(typeCollection, swsMembers);
        }
        
        public AccessApp.EpiService.rFunction GetGroupsGroupIsIn(string aDomainName, string aGroupName) {
            return base.Channel.GetGroupsGroupIsIn(aDomainName, aGroupName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetGroupsGroupIsInAsync(string aDomainName, string aGroupName) {
            return base.Channel.GetGroupsGroupIsInAsync(aDomainName, aGroupName);
        }
        
        public AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCM(string sDomain, string sObject, bool swsMembers) {
            return base.Channel.GetObjectSCCM(sDomain, sObject, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMAsync(string sDomain, string sObject, bool swsMembers) {
            return base.Channel.GetObjectSCCMAsync(sDomain, sObject, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCMByBIOSGUID(string sSMBIOSGUID, string sIP, bool swsMembers) {
            return base.Channel.GetObjectSCCMByBIOSGUID(sSMBIOSGUID, sIP, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMByBIOSGUIDAsync(string sSMBIOSGUID, string sIP, bool swsMembers) {
            return base.Channel.GetObjectSCCMByBIOSGUIDAsync(sSMBIOSGUID, sIP, swsMembers);
        }
        
        public AccessApp.EpiService.st_GetObjectSCCM GetObjectSCCMByMACAddress(string sMACAddress, string sIP, bool swsMembers) {
            return base.Channel.GetObjectSCCMByMACAddress(sMACAddress, sIP, swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetObjectSCCM> GetObjectSCCMByMACAddressAsync(string sMACAddress, string sIP, bool swsMembers) {
            return base.Channel.GetObjectSCCMByMACAddressAsync(sMACAddress, sIP, swsMembers);
        }
        
        public AccessApp.EpiService.rFunction GetObjectSCCMByRessourceID(string sRessourceID) {
            return base.Channel.GetObjectSCCMByRessourceID(sRessourceID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetObjectSCCMByRessourceIDAsync(string sRessourceID) {
            return base.Channel.GetObjectSCCMByRessourceIDAsync(sRessourceID);
        }
        
        public AccessApp.EpiService.rGetPrinters GetPrinters(string sComputerName, string sDomainNameUser, string sUserName) {
            return base.Channel.GetPrinters(sComputerName, sDomainNameUser, sUserName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rGetPrinters> GetPrintersAsync(string sComputerName, string sDomainNameUser, string sUserName) {
            return base.Channel.GetPrintersAsync(sComputerName, sDomainNameUser, sUserName);
        }
        
        public AccessApp.EpiService.rGetRegistry GetRegistry(string sComputerName, string shKey, string sSubKey) {
            return base.Channel.GetRegistry(sComputerName, shKey, sSubKey);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rGetRegistry> GetRegistryAsync(string sComputerName, string shKey, string sSubKey) {
            return base.Channel.GetRegistryAsync(sComputerName, shKey, sSubKey);
        }
        
        public AccessApp.EpiService.rGetTSLogsInstallWindows GetTSLogsInstallWindows(string BIOSGUID) {
            return base.Channel.GetTSLogsInstallWindows(BIOSGUID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rGetTSLogsInstallWindows> GetTSLogsInstallWindowsAsync(string BIOSGUID) {
            return base.Channel.GetTSLogsInstallWindowsAsync(BIOSGUID);
        }
        
        public AccessApp.EpiService.st_GetCollection GetRulesByCollectionID(string sCollectionID) {
            return base.Channel.GetRulesByCollectionID(sCollectionID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollection> GetRulesByCollectionIDAsync(string sCollectionID) {
            return base.Channel.GetRulesByCollectionIDAsync(sCollectionID);
        }
        
        public AccessApp.EpiService.rSCCMStatus GetSCCMStatus(string sDomainName, string sObjectName) {
            return base.Channel.GetSCCMStatus(sDomainName, sObjectName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rSCCMStatus> GetSCCMStatusAsync(string sDomainName, string sObjectName) {
            return base.Channel.GetSCCMStatusAsync(sDomainName, sObjectName);
        }
        
        public AccessApp.EpiService.rSCCMStatus GetSCCMStatusByRessourceID(string sRessourceID) {
            return base.Channel.GetSCCMStatusByRessourceID(sRessourceID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rSCCMStatus> GetSCCMStatusByRessourceIDAsync(string sRessourceID) {
            return base.Channel.GetSCCMStatusByRessourceIDAsync(sRessourceID);
        }
        
        public AccessApp.EpiService.rFunction GetVersionPackages() {
            return base.Channel.GetVersionPackages();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GetVersionPackagesAsync() {
            return base.Channel.GetVersionPackagesAsync();
        }
        
        public AccessApp.EpiService.rFunction GstUsrEpiCARE(
                    string userName, 
                    string initials, 
                    string nom, 
                    string prenom, 
                    string email, 
                    string IDSecMed, 
                    string SexSecMed, 
                    string TelSecMed, 
                    string CmmSecMed, 
                    string DtNSecMed, 
                    string DtDSecMed, 
                    string DtCSecMed, 
                    string DtESecMed, 
                    string DtSSecMed, 
                    string StsSecMed, 
                    string IDPrestAS400, 
                    string SPSecMed, 
                    string SrvSecMed, 
                    string memberOf, 
                    string updBy, 
                    string password) {
            return base.Channel.GstUsrEpiCARE(userName, initials, nom, prenom, email, IDSecMed, SexSecMed, TelSecMed, CmmSecMed, DtNSecMed, DtDSecMed, DtCSecMed, DtESecMed, DtSSecMed, StsSecMed, IDPrestAS400, SPSecMed, SrvSecMed, memberOf, updBy, password);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrEpiCAREAsync(
                    string userName, 
                    string initials, 
                    string nom, 
                    string prenom, 
                    string email, 
                    string IDSecMed, 
                    string SexSecMed, 
                    string TelSecMed, 
                    string CmmSecMed, 
                    string DtNSecMed, 
                    string DtDSecMed, 
                    string DtCSecMed, 
                    string DtESecMed, 
                    string DtSSecMed, 
                    string StsSecMed, 
                    string IDPrestAS400, 
                    string SPSecMed, 
                    string SrvSecMed, 
                    string memberOf, 
                    string updBy, 
                    string password) {
            return base.Channel.GstUsrEpiCAREAsync(userName, initials, nom, prenom, email, IDSecMed, SexSecMed, TelSecMed, CmmSecMed, DtNSecMed, DtDSecMed, DtCSecMed, DtESecMed, DtSSecMed, StsSecMed, IDPrestAS400, SPSecMed, SrvSecMed, memberOf, updBy, password);
        }
        
        public AccessApp.EpiService.rFunction GstUsrPolymedis(string type, string userName, string nom, string prenom, string sexe, string dtN, string IDPrestAS400, string password) {
            return base.Channel.GstUsrPolymedis(type, userName, nom, prenom, sexe, dtN, IDPrestAS400, password);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrPolymedisAsync(string type, string userName, string nom, string prenom, string sexe, string dtN, string IDPrestAS400, string password) {
            return base.Channel.GstUsrPolymedisAsync(type, userName, nom, prenom, sexe, dtN, IDPrestAS400, password);
        }
        
        public AccessApp.EpiService.rFunction GstUsrXperthis(string domainName, string type, string userName, string dtN, string IDPrestAS400, string password, string sServer, string sPort) {
            return base.Channel.GstUsrXperthis(domainName, type, userName, dtN, IDPrestAS400, password, sServer, sPort);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> GstUsrXperthisAsync(string domainName, string type, string userName, string dtN, string IDPrestAS400, string password, string sServer, string sPort) {
            return base.Channel.GstUsrXperthisAsync(domainName, type, userName, dtN, IDPrestAS400, password, sServer, sPort);
        }
        
        public string HelloWorld(string Message) {
            return base.Channel.HelloWorld(Message);
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync(string Message) {
            return base.Channel.HelloWorldAsync(Message);
        }
        
        public AccessApp.EpiService.rFunction HldUsrEpiCARE(string userName, string DtESecMed, string updBy) {
            return base.Channel.HldUsrEpiCARE(userName, DtESecMed, updBy);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> HldUsrEpiCAREAsync(string userName, string DtESecMed, string updBy) {
            return base.Channel.HldUsrEpiCAREAsync(userName, DtESecMed, updBy);
        }
        
        public AccessApp.EpiService.rFunction HldUsrRXWin(string userName) {
            return base.Channel.HldUsrRXWin(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> HldUsrRXWinAsync(string userName) {
            return base.Channel.HldUsrRXWinAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction IsInCollectionName(string sObjectName, string sCollectionName) {
            return base.Channel.IsInCollectionName(sObjectName, sCollectionName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInCollectionNameAsync(string sObjectName, string sCollectionName) {
            return base.Channel.IsInCollectionNameAsync(sObjectName, sCollectionName);
        }
        
        public AccessApp.EpiService.rFunction IsInGroup(string domainNameUser, string userName, string domainNameGroup, string groupName) {
            return base.Channel.IsInGroup(domainNameUser, userName, domainNameGroup, groupName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInGroupAsync(string domainNameUser, string userName, string domainNameGroup, string groupName) {
            return base.Channel.IsInGroupAsync(domainNameUser, userName, domainNameGroup, groupName);
        }
        
        public AccessApp.EpiService.rFunction IsInGroupOpenDJ(string sUsrName, string sGrpName) {
            return base.Channel.IsInGroupOpenDJ(sUsrName, sGrpName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInGroupOpenDJAsync(string sUsrName, string sGrpName) {
            return base.Channel.IsInGroupOpenDJAsync(sUsrName, sGrpName);
        }
        
        public AccessApp.EpiService.rFunction IsInSCCM(string sDomain, string sObject) {
            return base.Channel.IsInSCCM(sDomain, sObject);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> IsInSCCMAsync(string sDomain, string sObject) {
            return base.Channel.IsInSCCMAsync(sDomain, sObject);
        }
        
        public AccessApp.EpiService.rFunction ReadInAD(string domainName, string myFilter, string aResultFields) {
            return base.Channel.ReadInAD(domainName, myFilter, aResultFields);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ReadInADAsync(string domainName, string myFilter, string aResultFields) {
            return base.Channel.ReadInADAsync(domainName, myFilter, aResultFields);
        }
        
        public AccessApp.EpiService.rReadInOpenDJ ReadInOpenDJ(string myFilter) {
            return base.Channel.ReadInOpenDJ(myFilter);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rReadInOpenDJ> ReadInOpenDJAsync(string myFilter) {
            return base.Channel.ReadInOpenDJAsync(myFilter);
        }
        
        public AccessApp.EpiService.rFunction RlsUsrRXWin(string userName) {
            return base.Channel.RlsUsrRXWin(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RlsUsrRXWinAsync(string userName) {
            return base.Channel.RlsUsrRXWinAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction RmvFldrNotes(string aSrvDomMAILING, string aUserName, string aFolderName) {
            return base.Channel.RmvFldrNotes(aSrvDomMAILING, aUserName, aFolderName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvFldrNotesAsync(string aSrvDomMAILING, string aUserName, string aFolderName) {
            return base.Channel.RmvFldrNotesAsync(aSrvDomMAILING, aUserName, aFolderName);
        }
        
        public AccessApp.EpiService.rFunction RmvInAllGroups(string domainName, string objectName) {
            return base.Channel.RmvInAllGroups(domainName, objectName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInAllGroupsAsync(string domainName, string objectName) {
            return base.Channel.RmvInAllGroupsAsync(domainName, objectName);
        }
        
        public AccessApp.EpiService.rFunction RmvInGroup(string domainName, string objectName, string GroupName) {
            return base.Channel.RmvInGroup(domainName, objectName, GroupName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInGroupAsync(string domainName, string objectName, string GroupName) {
            return base.Channel.RmvInGroupAsync(domainName, objectName, GroupName);
        }
        
        public AccessApp.EpiService.rFunction RmvInGroupOpenDJ(string sUID, string sGrpName) {
            return base.Channel.RmvInGroupOpenDJ(sUID, sGrpName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvInGroupOpenDJAsync(string sUID, string sGrpName) {
            return base.Channel.RmvInGroupOpenDJAsync(sUID, sGrpName);
        }
        
        public AccessApp.EpiService.rFunction RmvLoginScript(string domainName, string userName) {
            return base.Channel.RmvLoginScript(domainName, userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvLoginScriptAsync(string domainName, string userName) {
            return base.Channel.RmvLoginScriptAsync(domainName, userName);
        }
        
        public AccessApp.EpiService.rFunction RmvOnServerAntivirus(string domainName, string computerName, string onServer) {
            return base.Channel.RmvOnServerAntivirus(domainName, computerName, onServer);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RmvOnServerAntivirusAsync(string domainName, string computerName, string onServer) {
            return base.Channel.RmvOnServerAntivirusAsync(domainName, computerName, onServer);
        }
        
        public AccessApp.EpiService.rRtnInfo RtnInfo(string firstName, string lastName) {
            return base.Channel.RtnInfo(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtnInfo> RtnInfoAsync(string firstName, string lastName) {
            return base.Channel.RtnInfoAsync(firstName, lastName);
        }
        
        public AccessApp.EpiService.rRtvALLComputer RtvAllComputer() {
            return base.Channel.RtvAllComputer();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvALLComputer> RtvAllComputerAsync() {
            return base.Channel.RtvAllComputerAsync();
        }
        
        public AccessApp.EpiService.rRtvAllDLZimbra RtvAllDLZimbra() {
            return base.Channel.RtvAllDLZimbra();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllDLZimbra> RtvAllDLZimbraAsync() {
            return base.Channel.RtvAllDLZimbraAsync();
        }
        
        public AccessApp.EpiService.rRtvAllMbrGrpWin RtvAllMbrGrpWin(string domainName, string filter) {
            return base.Channel.RtvAllMbrGrpWin(domainName, filter);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllMbrGrpWin> RtvAllMbrGrpWinAsync(string domainName, string filter) {
            return base.Channel.RtvAllMbrGrpWinAsync(domainName, filter);
        }
        
        public AccessApp.EpiService.rRtvAllUsrOpenDJ RtvAllUsrOpenDJ() {
            return base.Channel.RtvAllUsrOpenDJ();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllUsrOpenDJ> RtvAllUsrOpenDJAsync() {
            return base.Channel.RtvAllUsrOpenDJAsync();
        }
        
        public AccessApp.EpiService.rRtvAllUsrWindows RtvAllUsrWindows(string domainName) {
            return base.Channel.RtvAllUsrWindows(domainName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvAllUsrWindows> RtvAllUsrWindowsAsync(string domainName) {
            return base.Channel.RtvAllUsrWindowsAsync(domainName);
        }
        
        public AccessApp.EpiService.rFunction RtvBckCollections(string domainName, string objectName, bool swsPurgeAfter) {
            return base.Channel.RtvBckCollections(domainName, objectName, swsPurgeAfter);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvBckCollectionsAsync(string domainName, string objectName, bool swsPurgeAfter) {
            return base.Channel.RtvBckCollectionsAsync(domainName, objectName, swsPurgeAfter);
        }
        
        public AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk RtvBIOSGUIDFromEpiDesk(string sEpiID, string swsAll) {
            return base.Channel.RtvBIOSGUIDFromEpiDesk(sEpiID, swsAll);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk> RtvBIOSGUIDFromEpiDeskAsync(string sEpiID, string swsAll) {
            return base.Channel.RtvBIOSGUIDFromEpiDeskAsync(sEpiID, swsAll);
        }
        
        public AccessApp.EpiService.rRtvComputerInfo RtvComputerInfo(string domainName, string computerName) {
            return base.Channel.RtvComputerInfo(domainName, computerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvComputerInfo> RtvComputerInfoAsync(string domainName, string computerName) {
            return base.Channel.RtvComputerInfoAsync(domainName, computerName);
        }
        
        public AccessApp.EpiService.rFunction RtvComputerNameFromCMDB(string MACAddress) {
            return base.Channel.RtvComputerNameFromCMDB(MACAddress);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvComputerNameFromCMDBAsync(string MACAddress) {
            return base.Channel.RtvComputerNameFromCMDBAsync(MACAddress);
        }
        
        public AccessApp.EpiService.rRtvDLZimbra RtvDLZimbra(string aDL) {
            return base.Channel.RtvDLZimbra(aDL);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvDLZimbra> RtvDLZimbraAsync(string aDL) {
            return base.Channel.RtvDLZimbraAsync(aDL);
        }
        
        public AccessApp.EpiService.rFunction RtvEnvRXWin() {
            return base.Channel.RtvEnvRXWin();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvEnvRXWinAsync() {
            return base.Channel.RtvEnvRXWinAsync();
        }
        
        public AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk RtvCMDBForBIOSGUID(string BIOSGUID, string swsAll) {
            return base.Channel.RtvCMDBForBIOSGUID(BIOSGUID, swsAll);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvBIOSGUIDFromEpiDesk> RtvCMDBForBIOSGUIDAsync(string BIOSGUID, string swsAll) {
            return base.Channel.RtvCMDBForBIOSGUIDAsync(BIOSGUID, swsAll);
        }
        
        public AccessApp.EpiService.rResultSelect RtvGrpAS400() {
            return base.Channel.RtvGrpAS400();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvGrpAS400Async() {
            return base.Channel.RtvGrpAS400Async();
        }
        
        public AccessApp.EpiService.rResultSelect RtvGrpEpiCare() {
            return base.Channel.RtvGrpEpiCare();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvGrpEpiCareAsync() {
            return base.Channel.RtvGrpEpiCareAsync();
        }
        
        public AccessApp.EpiService.rFunction RtvGrpLotus() {
            return base.Channel.RtvGrpLotus();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvGrpLotusAsync() {
            return base.Channel.RtvGrpLotusAsync();
        }
        
        public AccessApp.EpiService.rRtvGrpOpenDJ RtvGrpOpenDJ(bool swsMember, string sCn) {
            return base.Channel.RtvGrpOpenDJ(swsMember, sCn);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvGrpOpenDJ> RtvGrpOpenDJAsync(bool swsMember, string sCn) {
            return base.Channel.RtvGrpOpenDJAsync(swsMember, sCn);
        }
        
        public AccessApp.EpiService.rFunction RtvGrpTelemis() {
            return base.Channel.RtvGrpTelemis();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvGrpTelemisAsync() {
            return base.Channel.RtvGrpTelemisAsync();
        }
        
        public AccessApp.EpiService.rRtvGrpWin RtvGrpWin(string domainName) {
            return base.Channel.RtvGrpWin(domainName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvGrpWin> RtvGrpWinAsync(string domainName) {
            return base.Channel.RtvGrpWinAsync(domainName);
        }
        
        public AccessApp.EpiService.rFunction RtvInDns(string DomainName, string ComputerName) {
            return base.Channel.RtvInDns(DomainName, ComputerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvInDnsAsync(string DomainName, string ComputerName) {
            return base.Channel.RtvInDnsAsync(DomainName, ComputerName);
        }
        
        public AccessApp.EpiService.rRtvInfoComputer RtvInfoComputer(string computerName) {
            return base.Channel.RtvInfoComputer(computerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvInfoComputer> RtvInfoComputerAsync(string computerName) {
            return base.Channel.RtvInfoComputerAsync(computerName);
        }
        
        public AccessApp.EpiService.rRtvInfoComputer RtvInfoComputerByIP(string sIP) {
            return base.Channel.RtvInfoComputerByIP(sIP);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvInfoComputer> RtvInfoComputerByIPAsync(string sIP) {
            return base.Channel.RtvInfoComputerByIPAsync(sIP);
        }
        
        public AccessApp.EpiService.rRtvMACAddressFromEpiDesk RtvMACAddressFromEpiDesk(string sEpiID, string swsAll) {
            return base.Channel.RtvMACAddressFromEpiDesk(sEpiID, swsAll);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvMACAddressFromEpiDesk> RtvMACAddressFromEpiDeskAsync(string sEpiID, string swsAll) {
            return base.Channel.RtvMACAddressFromEpiDeskAsync(sEpiID, swsAll);
        }
        
        public AccessApp.EpiService.rFunction RtvMbrGrpWin(string sDomainName, string sGroupName) {
            return base.Channel.RtvMbrGrpWin(sDomainName, sGroupName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvMbrGrpWinAsync(string sDomainName, string sGroupName) {
            return base.Channel.RtvMbrGrpWinAsync(sDomainName, sGroupName);
        }
        
        public AccessApp.EpiService.rRtvMBInfo RtvMBInfo(string aUserName) {
            return base.Channel.RtvMBInfo(aUserName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvMBInfo> RtvMBInfoAsync(string aUserName) {
            return base.Channel.RtvMBInfoAsync(aUserName);
        }
        
        public AccessApp.EpiService.rFunction RtvOpenDJProperty(string domainName, string qui, string prop) {
            return base.Channel.RtvOpenDJProperty(domainName, qui, prop);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvOpenDJPropertyAsync(string domainName, string qui, string prop) {
            return base.Channel.RtvOpenDJPropertyAsync(domainName, qui, prop);
        }
        
        public AccessApp.EpiService.rFunction RtvOU(string domainName, string Filter, bool swsAllInfo) {
            return base.Channel.RtvOU(domainName, Filter, swsAllInfo);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvOUAsync(string domainName, string Filter, bool swsAllInfo) {
            return base.Channel.RtvOUAsync(domainName, Filter, swsAllInfo);
        }
        
        public AccessApp.EpiService.rResultSelect RtvPrestataireAS400(string nom) {
            return base.Channel.RtvPrestataireAS400(nom);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvPrestataireAS400Async(string nom) {
            return base.Channel.RtvPrestataireAS400Async(nom);
        }
        
        public AccessApp.EpiService.rFunction RtvPrfRXWin() {
            return base.Channel.RtvPrfRXWin();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvPrfRXWinAsync() {
            return base.Channel.RtvPrfRXWinAsync();
        }
        
        public AccessApp.EpiService.rFunction RtvServerAntivirus(string domainName, string computerName) {
            return base.Channel.RtvServerAntivirus(domainName, computerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvServerAntivirusAsync(string domainName, string computerName) {
            return base.Channel.RtvServerAntivirusAsync(domainName, computerName);
        }
        
        public AccessApp.EpiService.rResultSelect RtvServicesEpiCARE() {
            return base.Channel.RtvServicesEpiCARE();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvServicesEpiCAREAsync() {
            return base.Channel.RtvServicesEpiCAREAsync();
        }
        
        public AccessApp.EpiService.rResultSelect RtvSitesEpiCARE() {
            return base.Channel.RtvSitesEpiCARE();
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvSitesEpiCAREAsync() {
            return base.Channel.RtvSitesEpiCAREAsync();
        }
        
        public AccessApp.EpiService.rResultSelect RtvUsrAS400(string userName) {
            return base.Channel.RtvUsrAS400(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rResultSelect> RtvUsrAS400Async(string userName) {
            return base.Channel.RtvUsrAS400Async(userName);
        }
        
        public AccessApp.EpiService.rRtvUsrLotusInfo RtvUsrLotus(string aUserName) {
            return base.Channel.RtvUsrLotus(aUserName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrLotusInfo> RtvUsrLotusAsync(string aUserName) {
            return base.Channel.RtvUsrLotusAsync(aUserName);
        }
        
        public AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJ(string userName) {
            return base.Channel.RtvUsrOpenDJ(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJAsync(string userName) {
            return base.Channel.RtvUsrOpenDJAsync(userName);
        }
        
        public AccessApp.EpiService.rRtvUsersOpenDJ RtvUsrOpenDJByEmail(string sMail) {
            return base.Channel.RtvUsrOpenDJByEmail(sMail);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsersOpenDJ> RtvUsrOpenDJByEmailAsync(string sMail) {
            return base.Channel.RtvUsrOpenDJByEmailAsync(sMail);
        }
        
        public AccessApp.EpiService.rRtvUsersOpenDJ RtvUsrOpenDJByEpicuraDomainUser(string EpicuraDomainUser) {
            return base.Channel.RtvUsrOpenDJByEpicuraDomainUser(EpicuraDomainUser);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsersOpenDJ> RtvUsrOpenDJByEpicuraDomainUserAsync(string EpicuraDomainUser) {
            return base.Channel.RtvUsrOpenDJByEpicuraDomainUserAsync(EpicuraDomainUser);
        }
        
        public AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJByINAMI(string INAMI) {
            return base.Channel.RtvUsrOpenDJByINAMI(INAMI);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJByINAMIAsync(string INAMI) {
            return base.Channel.RtvUsrOpenDJByINAMIAsync(INAMI);
        }
        
        public AccessApp.EpiService.rRtvUsrOpenDJ RtvUsrOpenDJByTelephoneNumber(string sTelephoneNumber, string sProp) {
            return base.Channel.RtvUsrOpenDJByTelephoneNumber(sTelephoneNumber, sProp);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrOpenDJ> RtvUsrOpenDJByTelephoneNumberAsync(string sTelephoneNumber, string sProp) {
            return base.Channel.RtvUsrOpenDJByTelephoneNumberAsync(sTelephoneNumber, sProp);
        }
        
        public AccessApp.EpiService.rRtvUsrRXWin RtvUsrRXWin(string userName) {
            return base.Channel.RtvUsrRXWin(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrRXWin> RtvUsrRXWinAsync(string userName) {
            return base.Channel.RtvUsrRXWinAsync(userName);
        }
        
        public AccessApp.EpiService.rRtvUsrEpiCARE RtvUsrEpiCARE(string userName) {
            return base.Channel.RtvUsrEpiCARE(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrEpiCARE> RtvUsrEpiCAREAsync(string userName) {
            return base.Channel.RtvUsrEpiCAREAsync(userName);
        }
        
        public AccessApp.EpiService.rRtvUsrTelemis RtvUsrTelemis(string userName) {
            return base.Channel.RtvUsrTelemis(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrTelemis> RtvUsrTelemisAsync(string userName) {
            return base.Channel.RtvUsrTelemisAsync(userName);
        }
        
        public AccessApp.EpiService.rRtvUsrWindows RtvUsrWinByINAMI(string domainName, string INAMI) {
            return base.Channel.RtvUsrWinByINAMI(domainName, INAMI);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrWindows> RtvUsrWinByINAMIAsync(string domainName, string INAMI) {
            return base.Channel.RtvUsrWinByINAMIAsync(domainName, INAMI);
        }
        
        public AccessApp.EpiService.rRtvUsrWindows RtvUsrWindows(string domainName, string userName, bool AllDomains) {
            return base.Channel.RtvUsrWindows(domainName, userName, AllDomains);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrWindows> RtvUsrWindowsAsync(string domainName, string userName, bool AllDomains) {
            return base.Channel.RtvUsrWindowsAsync(domainName, userName, AllDomains);
        }
        
        public AccessApp.EpiService.rFunction RtvUsrWindonsBySid(string sSid) {
            return base.Channel.RtvUsrWindonsBySid(sSid);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvUsrWindonsBySidAsync(string sSid) {
            return base.Channel.RtvUsrWindonsBySidAsync(sSid);
        }
        
        public AccessApp.EpiService.rFunction RtvUsrWinStatus(string domainName, string userName) {
            return base.Channel.RtvUsrWinStatus(domainName, userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> RtvUsrWinStatusAsync(string domainName, string userName) {
            return base.Channel.RtvUsrWinStatusAsync(domainName, userName);
        }
        
        public AccessApp.EpiService.rRtvUsrZimbra RtvUsrZimbra(string aAccount) {
            return base.Channel.RtvUsrZimbra(aAccount);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rRtvUsrZimbra> RtvUsrZimbraAsync(string aAccount) {
            return base.Channel.RtvUsrZimbraAsync(aAccount);
        }
        
        public AccessApp.EpiService.rFunction AddGrpAS400(string userName, string sMemberOf, bool dltBefore) {
            return base.Channel.AddGrpAS400(userName, sMemberOf, dltBefore);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddGrpAS400Async(string userName, string sMemberOf, bool dltBefore) {
            return base.Channel.AddGrpAS400Async(userName, sMemberOf, dltBefore);
        }
        
        public AccessApp.EpiService.rFunction AddInCollectionSCCM(string sResourceID, string sType, string sRuleName, string sSiteIDCollection, string sMailType, string sMailTo) {
            return base.Channel.AddInCollectionSCCM(sResourceID, sType, sRuleName, sSiteIDCollection, sMailType, sMailTo);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInCollectionSCCMAsync(string sResourceID, string sType, string sRuleName, string sSiteIDCollection, string sMailType, string sMailTo) {
            return base.Channel.AddInCollectionSCCMAsync(sResourceID, sType, sRuleName, sSiteIDCollection, sMailType, sMailTo);
        }
        
        public AccessApp.EpiService.rFunction AddInGroup(string domainName, string allGroupName, string objectName) {
            return base.Channel.AddInGroup(domainName, allGroupName, objectName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInGroupAsync(string domainName, string allGroupName, string objectName) {
            return base.Channel.AddInGroupAsync(domainName, allGroupName, objectName);
        }
        
        public AccessApp.EpiService.rFunction AddInGroupOpenDJ(string sUID, string sGrpName) {
            return base.Channel.AddInGroupOpenDJ(sUID, sGrpName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddInGroupOpenDJAsync(string sUID, string sGrpName) {
            return base.Channel.AddInGroupOpenDJAsync(sUID, sGrpName);
        }
        
        public AccessApp.EpiService.rFunction AddObjectClassLdapOpenDJ(string sObjectClass, string sOUName, string sFieldName, string sFieldValue) {
            return base.Channel.AddObjectClassLdapOpenDJ(sObjectClass, sOUName, sFieldName, sFieldValue);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> AddObjectClassLdapOpenDJAsync(string sObjectClass, string sOUName, string sFieldName, string sFieldValue) {
            return base.Channel.AddObjectClassLdapOpenDJAsync(sObjectClass, sOUName, sFieldName, sFieldValue);
        }
        
        public AccessApp.EpiService.rFunction ChgACL(string FolderPath, string UserAccount) {
            return base.Channel.ChgACL(FolderPath, UserAccount);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgACLAsync(string FolderPath, string UserAccount) {
            return base.Channel.ChgACLAsync(FolderPath, UserAccount);
        }
        
        public AccessApp.EpiService.rFunction ChgOU(string domainName, string objectName, string newOU) {
            return base.Channel.ChgOU(domainName, objectName, newOU);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgOUAsync(string domainName, string objectName, string newOU) {
            return base.Channel.ChgOUAsync(domainName, objectName, newOU);
        }
        
        public AccessApp.EpiService.rFunction ChgComputerNameInSCCM(string sBIOSGUID, string sNewName) {
            return base.Channel.ChgComputerNameInSCCM(sBIOSGUID, sNewName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgComputerNameInSCCMAsync(string sBIOSGUID, string sNewName) {
            return base.Channel.ChgComputerNameInSCCMAsync(sBIOSGUID, sNewName);
        }
        
        public AccessApp.EpiService.rFunction ChgPwdAs400(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdAs400(userName, password1, password2, restreint);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdAs400Async(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdAs400Async(userName, password1, password2, restreint);
        }
        
        public AccessApp.EpiService.rFunction ChgPwdEpiCARE(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdEpiCARE(userName, password1, password2, restreint);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdEpiCAREAsync(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdEpiCAREAsync(userName, password1, password2, restreint);
        }
        
        public AccessApp.EpiService.rFunction ChgPwdUltrAgenda(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdUltrAgenda(userName, password1, password2, restreint);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdUltrAgendaAsync(string userName, string password1, string password2, bool restreint) {
            return base.Channel.ChgPwdUltrAgendaAsync(userName, password1, password2, restreint);
        }
        
        public AccessApp.EpiService.rFunction ChgPwdWindows(string domainName, string userName, string oldPassword, string password1, string password2, bool resetPassword, bool restreint) {
            return base.Channel.ChgPwdWindows(domainName, userName, oldPassword, password1, password2, resetPassword, restreint);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChgPwdWindowsAsync(string domainName, string userName, string oldPassword, string password1, string password2, bool resetPassword, bool restreint) {
            return base.Channel.ChgPwdWindowsAsync(domainName, userName, oldPassword, password1, password2, resetPassword, restreint);
        }
        
        public AccessApp.EpiService.rFunction ChkEpiID(string sEpiID) {
            return base.Channel.ChkEpiID(sEpiID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkEpiIDAsync(string sEpiID) {
            return base.Channel.ChkEpiIDAsync(sEpiID);
        }
        
        public AccessApp.EpiService.rFunction ChkInstallMSI(string sDomainName, string sComputerName) {
            return base.Channel.ChkInstallMSI(sDomainName, sComputerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkInstallMSIAsync(string sDomainName, string sComputerName) {
            return base.Channel.ChkInstallMSIAsync(sDomainName, sComputerName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrAS400(string userName) {
            return base.Channel.ChkUsrAS400(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrAS400Async(string userName) {
            return base.Channel.ChkUsrAS400Async(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrEpiCARE(string userName) {
            return base.Channel.ChkUsrEpiCARE(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrEpiCAREAsync(string userName) {
            return base.Channel.ChkUsrEpiCAREAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrIPortal(string userName) {
            return base.Channel.ChkUsrIPortal(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrIPortalAsync(string userName) {
            return base.Channel.ChkUsrIPortalAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrLotus(string userName) {
            return base.Channel.ChkUsrLotus(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrLotusAsync(string userName) {
            return base.Channel.ChkUsrLotusAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrOpenDJ(string userName) {
            return base.Channel.ChkUsrOpenDJ(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrOpenDJAsync(string userName) {
            return base.Channel.ChkUsrOpenDJAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrPolymedis(string domainName, string userName) {
            return base.Channel.ChkUsrPolymedis(domainName, userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrPolymedisAsync(string domainName, string userName) {
            return base.Channel.ChkUsrPolymedisAsync(domainName, userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrUltrAgenda(string userName) {
            return base.Channel.ChkUsrUltrAgenda(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrUltrAgendaAsync(string userName) {
            return base.Channel.ChkUsrUltrAgendaAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrTelemis(string userName) {
            return base.Channel.ChkUsrTelemis(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrTelemisAsync(string userName) {
            return base.Channel.ChkUsrTelemisAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrWindows(string domainName, string userName) {
            return base.Channel.ChkUsrWindows(domainName, userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrWindowsAsync(string domainName, string userName) {
            return base.Channel.ChkUsrWindowsAsync(domainName, userName);
        }
        
        public AccessApp.EpiService.rFunction ChkUsrZimbra(string aAccount) {
            return base.Channel.ChkUsrZimbra(aAccount);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkUsrZimbraAsync(string aAccount) {
            return base.Channel.ChkUsrZimbraAsync(aAccount);
        }
        
        public AccessApp.EpiService.rFunction ChkWinPwd(string domainName, string userName, string password) {
            return base.Channel.ChkWinPwd(domainName, userName, password);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ChkWinPwdAsync(string domainName, string userName, string password) {
            return base.Channel.ChkWinPwdAsync(domainName, userName, password);
        }
        
        public AccessApp.EpiService.rFunction ClnPropLdapOpenDJ(string sUID, string sPropName) {
            return base.Channel.ClnPropLdapOpenDJ(sUID, sPropName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ClnPropLdapOpenDJAsync(string sUID, string sPropName) {
            return base.Channel.ClnPropLdapOpenDJAsync(sUID, sPropName);
        }
        
        public AccessApp.EpiService.rFunction ComputerIsAlive(string sComputerName, string sNbEssai) {
            return base.Channel.ComputerIsAlive(sComputerName, sNbEssai);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> ComputerIsAliveAsync(string sComputerName, string sNbEssai) {
            return base.Channel.ComputerIsAliveAsync(sComputerName, sNbEssai);
        }
        
        public AccessApp.EpiService.rFunction CpyFldrSnd(string aSrvDomMAILING, string aUserName, string aFolderName) {
            return base.Channel.CpyFldrSnd(aSrvDomMAILING, aUserName, aFolderName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CpyFldrSndAsync(string aSrvDomMAILING, string aUserName, string aFolderName) {
            return base.Channel.CpyFldrSndAsync(aSrvDomMAILING, aUserName, aFolderName);
        }
        
        public AccessApp.EpiService.rFunction CrtBCKCollections(string domainName, string objectName, string BackupName) {
            return base.Channel.CrtBCKCollections(domainName, objectName, BackupName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtBCKCollectionsAsync(string domainName, string objectName, string BackupName) {
            return base.Channel.CrtBCKCollectionsAsync(domainName, objectName, BackupName);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrAS400(string userName, string displayName, string password) {
            return base.Channel.CrtUsrAS400(userName, displayName, password);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrAS400Async(string userName, string displayName, string password) {
            return base.Channel.CrtUsrAS400Async(userName, displayName, password);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrLotus(string userName, string sn, string givenName, string mail, string password, string sGrp) {
            return base.Channel.CrtUsrLotus(userName, sn, givenName, mail, password, sGrp);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrLotusAsync(string userName, string sn, string givenName, string mail, string password, string sGrp) {
            return base.Channel.CrtUsrLotusAsync(userName, sn, givenName, mail, password, sGrp);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrOpenDJ(string domainName, string loginDomain, string userName, string firstName, string lastName, string INAMI, string mail, string mobile, string ChannelAccess, bool swsTestAD) {
            return base.Channel.CrtUsrOpenDJ(domainName, loginDomain, userName, firstName, lastName, INAMI, mail, mobile, ChannelAccess, swsTestAD);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrOpenDJAsync(string domainName, string loginDomain, string userName, string firstName, string lastName, string INAMI, string mail, string mobile, string ChannelAccess, bool swsTestAD) {
            return base.Channel.CrtUsrOpenDJAsync(domainName, loginDomain, userName, firstName, lastName, INAMI, mail, mobile, ChannelAccess, swsTestAD);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrRXWin(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil) {
            return base.Channel.CrtUsrRXWin(username, displayName, CommUtil, EnvDefaut, Initiales, Profil);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrRXWinAsync(string username, string displayName, bool CommUtil, string EnvDefaut, string Initiales, string Profil) {
            return base.Channel.CrtUsrRXWinAsync(username, displayName, CommUtil, EnvDefaut, Initiales, Profil);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrTelemis(string userName, string displayName, string password, string Group) {
            return base.Channel.CrtUsrTelemis(userName, displayName, password, Group);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrTelemisAsync(string userName, string displayName, string password, string Group) {
            return base.Channel.CrtUsrTelemisAsync(userName, displayName, password, Group);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrWindows(
                    string domainName, 
                    string OU, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string memberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment) {
            return base.Channel.CrtUsrWindows(domainName, OU, userName, sn, givenName, initials, displayName, mail, profilePath, scriptPath, TerminalServicesProfilePath, password, restreint, memberOf, employeeType, preferredLanguage, comment);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrWindowsAsync(
                    string domainName, 
                    string OU, 
                    string userName, 
                    string sn, 
                    string givenName, 
                    string initials, 
                    string displayName, 
                    string mail, 
                    string profilePath, 
                    string scriptPath, 
                    string TerminalServicesProfilePath, 
                    string password, 
                    bool restreint, 
                    string memberOf, 
                    string employeeType, 
                    string preferredLanguage, 
                    string comment) {
            return base.Channel.CrtUsrWindowsAsync(domainName, OU, userName, sn, givenName, initials, displayName, mail, profilePath, scriptPath, TerminalServicesProfilePath, password, restreint, memberOf, employeeType, preferredLanguage, comment);
        }
        
        public AccessApp.EpiService.rFunction CrtUsrZimbra(string aAccount, string aPassword, string aFirstName, string aLastName, string aMemberOf) {
            return base.Channel.CrtUsrZimbra(aAccount, aPassword, aFirstName, aLastName, aMemberOf);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> CrtUsrZimbraAsync(string aAccount, string aPassword, string aFirstName, string aLastName, string aMemberOf) {
            return base.Channel.CrtUsrZimbraAsync(aAccount, aPassword, aFirstName, aLastName, aMemberOf);
        }
        
        public AccessApp.EpiService.rFunction DisabledOrEnabledUsrWindows(string domainName, string userName, bool enabled) {
            return base.Channel.DisabledOrEnabledUsrWindows(domainName, userName, enabled);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DisabledOrEnabledUsrWindowsAsync(string domainName, string userName, bool enabled) {
            return base.Channel.DisabledOrEnabledUsrWindowsAsync(domainName, userName, enabled);
        }
        
        public AccessApp.EpiService.rFunction Debug(string aMsg, string aQui, string aObjet) {
            return base.Channel.Debug(aMsg, aQui, aObjet);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DebugAsync(string aMsg, string aQui, string aObjet) {
            return base.Channel.DebugAsync(aMsg, aQui, aObjet);
        }
        
        public AccessApp.EpiService.rFunction DltInCollectionSCCM(string sObjectNameInSCCM, string sSiteIDCollection) {
            return base.Channel.DltInCollectionSCCM(sObjectNameInSCCM, sSiteIDCollection);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInCollectionSCCMAsync(string sObjectNameInSCCM, string sSiteIDCollection) {
            return base.Channel.DltInCollectionSCCMAsync(sObjectNameInSCCM, sSiteIDCollection);
        }
        
        public AccessApp.EpiService.rFunction DltInDns(string DomainName, string OwnerName) {
            return base.Channel.DltInDns(DomainName, OwnerName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInDnsAsync(string DomainName, string OwnerName) {
            return base.Channel.DltInDnsAsync(DomainName, OwnerName);
        }
        
        public AccessApp.EpiService.rFunction DltInstallStatus(string sRessourceID, string sCollectionID, string sAssignmentID) {
            return base.Channel.DltInstallStatus(sRessourceID, sCollectionID, sAssignmentID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInstallStatusAsync(string sRessourceID, string sCollectionID, string sAssignmentID) {
            return base.Channel.DltInstallStatusAsync(sRessourceID, sCollectionID, sAssignmentID);
        }
        
        public AccessApp.EpiService.rFunction DltGrpAS400(string userName) {
            return base.Channel.DltGrpAS400(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltGrpAS400Async(string userName) {
            return base.Channel.DltGrpAS400Async(userName);
        }
        
        public AccessApp.EpiService.rFunction DltObjectSCCM(string sDomain, string sObject) {
            return base.Channel.DltObjectSCCM(sDomain, sObject);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltObjectSCCMAsync(string sDomain, string sObject) {
            return base.Channel.DltObjectSCCMAsync(sDomain, sObject);
        }
        
        public AccessApp.EpiService.rFunction DltObjectSCCMByBIOSGUID(string sSMBIOSGUID) {
            return base.Channel.DltObjectSCCMByBIOSGUID(sSMBIOSGUID);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltObjectSCCMByBIOSGUIDAsync(string sSMBIOSGUID) {
            return base.Channel.DltObjectSCCMByBIOSGUIDAsync(sSMBIOSGUID);
        }
        
        public AccessApp.EpiService.rFunction DltUsrAS400(string userName) {
            return base.Channel.DltUsrAS400(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrAS400Async(string userName) {
            return base.Channel.DltUsrAS400Async(userName);
        }
        
        public AccessApp.EpiService.rFunction DltUsrEpiCARE(string userName) {
            return base.Channel.DltUsrEpiCARE(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrEpiCAREAsync(string userName) {
            return base.Channel.DltUsrEpiCAREAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction DltUsrLotus(string userName) {
            return base.Channel.DltUsrLotus(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrLotusAsync(string userName) {
            return base.Channel.DltUsrLotusAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction DltUsrOpenDJ(string userName) {
            return base.Channel.DltUsrOpenDJ(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrOpenDJAsync(string userName) {
            return base.Channel.DltUsrOpenDJAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction DltUsrTelemis(string userName) {
            return base.Channel.DltUsrTelemis(userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrTelemisAsync(string userName) {
            return base.Channel.DltUsrTelemisAsync(userName);
        }
        
        public AccessApp.EpiService.rFunction DltInAD(string domainName, string objetName) {
            return base.Channel.DltInAD(domainName, objetName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltInADAsync(string domainName, string objetName) {
            return base.Channel.DltInADAsync(domainName, objetName);
        }
        
        public AccessApp.EpiService.rFunction DltUsrZimbra(string aAccount) {
            return base.Channel.DltUsrZimbra(aAccount);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rFunction> DltUsrZimbraAsync(string aAccount) {
            return base.Channel.DltUsrZimbraAsync(aAccount);
        }
        
        public AccessApp.EpiService.rDates DtesUsrAD(string domainName, string userName) {
            return base.Channel.DtesUsrAD(domainName, userName);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rDates> DtesUsrADAsync(string domainName, string userName) {
            return base.Channel.DtesUsrADAsync(domainName, userName);
        }
        
        public AccessApp.EpiService.st_GetCollections GetAllCollections(bool swsMembers) {
            return base.Channel.GetAllCollections(swsMembers);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.st_GetCollections> GetAllCollectionsAsync(bool swsMembers) {
            return base.Channel.GetAllCollectionsAsync(swsMembers);
        }
        
        public AccessApp.EpiService.rGetAllRessourceIDInSCCMStatus GetAllRessourceIDInSCCMStatus(bool swsDltIfNotFound) {
            return base.Channel.GetAllRessourceIDInSCCMStatus(swsDltIfNotFound);
        }
        
        public System.Threading.Tasks.Task<AccessApp.EpiService.rGetAllRessourceIDInSCCMStatus> GetAllRessourceIDInSCCMStatusAsync(bool swsDltIfNotFound) {
            return base.Channel.GetAllRessourceIDInSCCMStatusAsync(swsDltIfNotFound);
        }
    }
}
